<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="brighter_fatter_kernel_8py" kind="file" language="Python">
    <compoundname>brighterFatterKernel.py</compoundname>
    <innerclass refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel" prot="public">lsst::ip::isr::brighterFatterKernel::BrighterFatterKernel</innerclass>
    <innernamespace refid="namespacelsst">lsst</innernamespace>
    <innernamespace refid="namespacelsst_1_1ip">lsst::ip</innernamespace>
    <innernamespace refid="namespacelsst_1_1ip_1_1isr">lsst::ip::isr</innernamespace>
    <innernamespace refid="namespacelsst_1_1ip_1_1isr_1_1brighter_fatter_kernel">lsst::ip::isr::brighterFatterKernel</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacelsst_1_1ip_1_1isr_1_1brighter_fatter_kernel" refkind="compound"><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>ip_isr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Developed<sp/>for<sp/>the<sp/>LSST<sp/>Data<sp/>Management<sp/>System.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>product<sp/>includes<sp/>software<sp/>developed<sp/>by<sp/>the<sp/>LSST<sp/>Project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(https://www.lsst.org).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>the<sp/>COPYRIGHT<sp/>file<sp/>at<sp/>the<sp/>top-level<sp/>directory<sp/>of<sp/>this<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>for<sp/>details<sp/>of<sp/>code<sp/>ownership.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;https://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Brighter<sp/>Fatter<sp/>Kernel<sp/>calibration<sp/>definition.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">__all__<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;BrighterFatterKernel&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>astropy.table<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Table</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacelsst_1_1afw_1_1math" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.math</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>afwMath</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>IsrCalib</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel" kindref="compound">BrighterFatterKernel</ref>(IsrCalib):</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Calibration<sp/>of<sp/>brighter-fatter<sp/>kernels<sp/>for<sp/>an<sp/>instrument.</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>ampKernels<sp/>are<sp/>the<sp/>kernels<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>each<sp/>amplifier<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>a<sp/>detector,<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>generated<sp/>by<sp/>having<sp/>``level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;AMP&apos;</highlight><highlight class="normal">``.</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>detectorKernel<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>the<sp/>kernel<sp/>generated<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/>detector<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>a</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>whole,<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>generated<sp/>by<sp/>having<sp/>``level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;DETECTOR&apos;</highlight><highlight class="normal">``.</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>makeDetectorKernelFromAmpwiseKernels<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>a<sp/>method<sp/>to<sp/>generate<sp/>the</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/>detector,<sp/>constructed<sp/>by<sp/>averaging<sp/>together<sp/>the</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>ampwise<sp/>kernels<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>detector.<sp/><sp/>The<sp/>existing<sp/>application<sp/>code<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>only<sp/>defined<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>kernels<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>``level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;DETECTOR&apos;</highlight><highlight class="normal">``,<sp/>so<sp/>this<sp/>method</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>used<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>supplied<sp/>kernel<sp/>was<sp/>built<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>``level<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;AMP&apos;</highlight><highlight class="normal">``.</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>camera<sp/>:<sp/>`<ref refid="classlsst_1_1afw_1_1camera_geom_1_1_camera" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.cameraGeom.Camera</ref>`</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Camera<sp/>describing<sp/>detector<sp/>geometry.</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>level<sp/>:<sp/>`str`</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Level<sp/>the<sp/>kernels<sp/>will<sp/>be<sp/>generated<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>:<sp/>`logging.Logger`,<sp/>optional</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log<sp/>to<sp/>write<sp/>messages<sp/>to.</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>**kwargs<sp/>:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters<sp/>to<sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"><sp/>to<sp/>parent<sp/>constructor.</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>Notes</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>-----</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Version<sp/>1.1<sp/>adds<sp/>the<sp/>`expIdMask`<sp/>property,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>substitutes</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>`means`<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>`variances`<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>`rawMeans`<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>`rawVariances`</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>PTC<sp/>dataset.</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>expIdMask<sp/>:<sp/>`dict`,<sp/>[`str`,`numpy.ndarray`]</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>keyed<sp/>by<sp/>amp<sp/>names<sp/>containing<sp/>the<sp/>mask<sp/>produced<sp/>after</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outlier<sp/>rejection.</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>rawMeans<sp/>:<sp/>`dict`,<sp/>[`str`,<sp/>`numpy.ndarray`]</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>keyed<sp/>by<sp/>amp<sp/>names<sp/>containing<sp/>the<sp/>unmasked<sp/>average<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>means<sp/>of<sp/>the<sp/>exposures<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>each<sp/>flat<sp/>pair.</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>rawVariances<sp/>:<sp/>`dict`,<sp/>[`str`,<sp/>`numpy.ndarray`]</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>keyed<sp/>by<sp/>amp<sp/>names<sp/>containing<sp/>the<sp/>variance<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference<sp/>image<sp/>of<sp/>the<sp/>exposures<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>each<sp/>flat<sp/>pair.</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Corresponds<sp/>to<sp/>rawVars<sp/>of<sp/>PTC.</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>rawXcorrs<sp/>:<sp/>`dict`,<sp/>[`str`,<sp/>`numpy.ndarray`]</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>keyed<sp/>by<sp/>amp<sp/>names<sp/>containing<sp/>an<sp/>array<sp/>of<sp/>measured</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>covariances<sp/>per<sp/>mean<sp/>flux.</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Corresponds<sp/>to<sp/>covariances<sp/>of<sp/>PTC.</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>badAmps<sp/>:<sp/>`list`</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List<sp/>of<sp/>bad<sp/>amplifiers<sp/>names.</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>shape<sp/>:<sp/>`tuple`</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tuple<sp/>of<sp/>the<sp/>shape<sp/>of<sp/>the<sp/>BFK<sp/>kernels.</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>gain<sp/>:<sp/>`dict`,<sp/>[`str`,`float`]</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>keyed<sp/>by<sp/>amp<sp/>names<sp/>containing<sp/>the<sp/>fitted<sp/>gains.</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>noise<sp/>:<sp/>`dict`,<sp/>[`str`,`float`]</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>keyed<sp/>by<sp/>amp<sp/>names<sp/>containing<sp/>the<sp/>fitted<sp/>noise.</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>meanXcorrs<sp/>:<sp/>`dict`,<sp/>[`str`,`numpy.ndarray`]</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>keyed<sp/>by<sp/>amp<sp/>names<sp/>containing<sp/>the<sp/>averaged</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cross-correlations.</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>valid<sp/>:<sp/>`dict`,<sp/>[`str`,`bool`]</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>keyed<sp/>by<sp/>amp<sp/>names<sp/>containing<sp/>validity<sp/>of<sp/>data.</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>ampKernels<sp/>:<sp/>`dict`,<sp/>[`str`,<sp/>`numpy.ndarray`]</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>keyed<sp/>by<sp/>amp<sp/>names<sp/>containing<sp/>the<sp/>BF<sp/>kernels.</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>detKernels<sp/>:<sp/>`dict`</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>keyed<sp/>by<sp/>detector<sp/>names<sp/>containing<sp/>the<sp/>BF<sp/>kernels.</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>_OBSTYPE<sp/>=<sp/>&apos;bfk&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>_SCHEMA<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Brighter-fatter<sp/>kernel&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>_VERSION<sp/>=<sp/>1.1</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a1c096ce9fa01a675e551117f6c3ff3a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a1c096ce9fa01a675e551117f6c3ff3a5" kindref="member">__init__</ref>(self,<sp/>camera=None,<sp/>level=None,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="103" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a920ed06bb5bf961100470d899d848dc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a920ed06bb5bf961100470d899d848dc5" kindref="member">level</ref><sp/>=<sp/>level</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Things<sp/>inherited<sp/>from<sp/>the<sp/>PTC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a54889ad029f8c4e7058d416beafd0ecb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a54889ad029f8c4e7058d416beafd0ecb" kindref="member">expIdMask</ref><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="107" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1af7cadcb6255a1a6e76a46d09adbd2d3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1af7cadcb6255a1a6e76a46d09adbd2d3f" kindref="member">rawMeans</ref><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="108" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a2873bccff855be875c1d9f7f7f779273" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a2873bccff855be875c1d9f7f7f779273" kindref="member">rawVariances</ref><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="109" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6ff85a572f6470e3bd07c6fdd1116ebf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6ff85a572f6470e3bd07c6fdd1116ebf" kindref="member">rawXcorrs</ref><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="110" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a74ab11e88ea7ac530cb7cd379f534c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a74ab11e88ea7ac530cb7cd379f534c74" kindref="member">badAmps</ref><sp/>=<sp/>list()</highlight></codeline>
<codeline lineno="111" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1afc7512a3402778014de25b200b2a6c8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1afc7512a3402778014de25b200b2a6c8d" kindref="member">shape</ref><sp/>=<sp/>(17,<sp/>17)</highlight></codeline>
<codeline lineno="112" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1ade5cd0955be01d8864a5883bf6917849" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1ade5cd0955be01d8864a5883bf6917849" kindref="member">gain</ref><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="113" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6023047780897e147f15c01182cd17fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6023047780897e147f15c01182cd17fe" kindref="member">noise</ref><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Things<sp/>calculated<sp/>from<sp/>the<sp/>PTC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a7c777594c6034307524d893e992d6594" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a7c777594c6034307524d893e992d6594" kindref="member">meanXcorrs</ref><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="117" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1adde3ce23227897c603c9a15f7e43256c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1adde3ce23227897c603c9a15f7e43256c" kindref="member">valid</ref><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Things<sp/>that<sp/>are<sp/>used<sp/>downstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a4cd7df8e30c23eabad61c6e99d095c69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a4cd7df8e30c23eabad61c6e99d095c69" kindref="member">ampKernels</ref><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="121" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a3f500e8b80af1049b474592c6c2cf2cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a3f500e8b80af1049b474592c6c2cf2cb" kindref="member">detKernels</ref><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a1c096ce9fa01a675e551117f6c3ff3a5" kindref="member">__init__</ref>(**kwargs)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>camera:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a5dceaeea5d5c2dcfb0968e836c9a2cfd" kindref="member">initFromCamera</ref>(camera,<sp/>detectorId=kwargs.get(</highlight><highlight class="stringliteral">&apos;detectorId&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.requiredAttributes.update([</highlight><highlight class="stringliteral">&apos;level&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;expIdMask&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;rawMeans&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;rawVariances&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;rawXcorrs&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;badAmps&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;gain&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;noise&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;meanXcorrs&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;valid&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;ampKernels&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;detKernels&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6a485d3c51f279846f636ac507554aa0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6a485d3c51f279846f636ac507554aa0" kindref="member">updateMetadata</ref>(self,<sp/>setDate=False,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Update<sp/>calibration<sp/>metadata.</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>calls<sp/>the<sp/>base<sp/></highlight><highlight class="keyword">class</highlight><highlight class="stringliteral">&apos;s<sp/>method<sp/>after<sp/>ensuring<sp/>the<sp/>required</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibration<sp/>keywords<sp/>will<sp/>be<sp/>saved.</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDate<sp/>:<sp/>`bool`,<sp/>optional</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Update<sp/>the<sp/>CALIBDATE<sp/>fields<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>metadata<sp/>to<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.<sp/>Defaults<sp/>to<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs<sp/>:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Other<sp/>keyword<sp/>parameters<sp/>to<sp/>set<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>metadata.</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[&apos;LEVEL&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a920ed06bb5bf961100470d899d848dc5" kindref="member">level</ref></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;KERNEL_DX&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1afc7512a3402778014de25b200b2a6c8d" kindref="member">shape</ref>[0]</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;KERNEL_DY&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1afc7512a3402778014de25b200b2a6c8d" kindref="member">shape</ref>[1]</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6a485d3c51f279846f636ac507554aa0" kindref="member">updateMetadata</ref>(setDate=setDate,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a5dceaeea5d5c2dcfb0968e836c9a2cfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a5dceaeea5d5c2dcfb0968e836c9a2cfd" kindref="member">initFromCamera</ref>(self,<sp/>camera,<sp/>detectorId=None):</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Initialize<sp/>kernel<sp/>structure<sp/>from<sp/>camera.</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera<sp/>:<sp/>`<ref refid="classlsst_1_1afw_1_1camera_geom_1_1_camera" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.cameraGeom.Camera</ref>`</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Camera<sp/>to<sp/>use<sp/>to<sp/>define<sp/>geometry.</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detectorId<sp/>:<sp/>`int`,<sp/>optional</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Index<sp/>of<sp/>the<sp/>detector<sp/>to<sp/>generate.</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>:<sp/>`<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel" kindref="compound">lsst.ip.isr.BrighterFatterKernel</ref>`</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>initialized<sp/>calibration.</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>------</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RuntimeError</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raised<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>no<sp/>detectorId<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>supplied<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/>calibration<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``level=</highlight><highlight class="stringliteral">&apos;AMP&apos;</highlight><highlight class="normal">``.</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a026591f262dc28fcfe4c4ac16be15c67" kindref="member">_instrument</ref><sp/>=<sp/>camera.getName()</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>detectorId<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector<sp/>=<sp/>camera[detectorId]</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a711ea1585bcdad5c2f4f09e63f240b21" kindref="member">_detectorId</ref><sp/>=<sp/>detectorId</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1ab5ca2b8672ebf66d81754186797f62a3" kindref="member">_detectorName</ref><sp/>=<sp/>detector.getName()</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a53fffac4f92afbebf056009cf2340c96" kindref="member">_detectorSerial</ref><sp/>=<sp/>detector.getSerial()</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a920ed06bb5bf961100470d899d848dc5" kindref="member">level</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;AMP&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>detectorId<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;A<sp/>detectorId<sp/>must<sp/>be<sp/>supplied<sp/>if<sp/>level=&apos;AMP&apos;.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a74ab11e88ea7ac530cb7cd379f534c74" kindref="member">badAmps</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>detector:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ampName<sp/>=<sp/>amp.getName()</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a54889ad029f8c4e7058d416beafd0ecb" kindref="member">expIdMask</ref>[ampName]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1af7cadcb6255a1a6e76a46d09adbd2d3f" kindref="member">rawMeans</ref>[ampName]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a2873bccff855be875c1d9f7f7f779273" kindref="member">rawVariances</ref>[ampName]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6ff85a572f6470e3bd07c6fdd1116ebf" kindref="member">rawXcorrs</ref>[ampName]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1ade5cd0955be01d8864a5883bf6917849" kindref="member">gain</ref>[ampName]<sp/>=<sp/>amp.getGain()</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6023047780897e147f15c01182cd17fe" kindref="member">noise</ref>[ampName]<sp/>=<sp/>amp.getReadNoise()</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a7c777594c6034307524d893e992d6594" kindref="member">meanXcorrs</ref>[ampName]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a4cd7df8e30c23eabad61c6e99d095c69" kindref="member">ampKernels</ref>[ampName]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1adde3ce23227897c603c9a15f7e43256c" kindref="member">valid</ref>[ampName]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a920ed06bb5bf961100470d899d848dc5" kindref="member">level</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;DETECTOR&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>detectorId<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>det<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>camera:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detName<sp/>=<sp/>det.getName()</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a3f500e8b80af1049b474592c6c2cf2cb" kindref="member">detKernels</ref>[detName]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a3f500e8b80af1049b474592c6c2cf2cb" kindref="member">detKernels</ref>[self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1ab5ca2b8672ebf66d81754186797f62a3" kindref="member">_detectorName</ref>]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a8e652cf6ffca80e05c53906270f41b14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a8e652cf6ffca80e05c53906270f41b14" kindref="member">getLengths</ref>(self):</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Return<sp/>the<sp/>set<sp/>of<sp/>lengths<sp/>needed<sp/>for<sp/>reshaping<sp/>components.</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernelLength<sp/>:<sp/>`int`</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Product<sp/>of<sp/>the<sp/>elements<sp/>of<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1afc7512a3402778014de25b200b2a6c8d" kindref="member">shape</ref>.</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallLength<sp/>:<sp/>`int`</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size<sp/>of<sp/>an<sp/>untiled<sp/>covariance.</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nObs<sp/>:<sp/>`int`</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>observation<sp/>pairs<sp/>used<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>kernel.</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernelLength<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1afc7512a3402778014de25b200b2a6c8d" kindref="member">shape</ref>[0]<sp/>*<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1afc7512a3402778014de25b200b2a6c8d" kindref="member">shape</ref>[1]</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallLength<sp/>=<sp/>int((self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1afc7512a3402778014de25b200b2a6c8d" kindref="member">shape</ref>[0]<sp/>-<sp/>1)*(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1afc7512a3402778014de25b200b2a6c8d" kindref="member">shape</ref>[1]<sp/>-<sp/>1)/4)</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a920ed06bb5bf961100470d899d848dc5" kindref="member">level</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;AMP&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nObservations<sp/>=<sp/>set([len(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1af7cadcb6255a1a6e76a46d09adbd2d3f" kindref="member">rawMeans</ref>[amp])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1af7cadcb6255a1a6e76a46d09adbd2d3f" kindref="member">rawMeans</ref>])</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(nObservations)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;Inconsistent<sp/>number<sp/>of<sp/>observations<sp/>found.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nObs<sp/>=<sp/>nObservations.pop()</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nObs<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(kernelLength,<sp/>smallLength,<sp/>nObs)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1adafc0c9517f6d06a482e0e7741b38f4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1adafc0c9517f6d06a482e0e7741b38f4f" kindref="member">fromDict</ref>(cls,<sp/>dictionary):</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Construct<sp/>a<sp/>calibration<sp/>from<sp/>a<sp/>dictionary<sp/>of<sp/>properties.</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary<sp/>:<sp/>`dict`</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>of<sp/>properties.</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>:<sp/>`<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel" kindref="compound">lsst.ip.isr.BrighterFatterKernel</ref>`</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constructed<sp/>calibration.</highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>------</highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RuntimeError</highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raised<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>supplied<sp/>dictionary<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/>different</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibration.</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raised<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>version<sp/>of<sp/>the<sp/>supplied<sp/>dictionary<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>1.0.</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>=<sp/>cls()</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>calib._OBSTYPE<sp/>!=<sp/>(found<sp/>:=<sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;OBSTYPE&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(f</highlight><highlight class="stringliteral">&quot;Incorrect<sp/>brighter-fatter<sp/>kernel<sp/>supplied.<sp/><sp/>Expected<sp/>{calib._OBSTYPE},<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;found<sp/>{found}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.setMetadata(dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.calibInfoFromDict(dictionary)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.level<sp/>=<sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">].get(</highlight><highlight class="stringliteral">&apos;LEVEL&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;AMP&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.shape<sp/>=<sp/>(dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">].get(</highlight><highlight class="stringliteral">&apos;KERNEL_DX&apos;</highlight><highlight class="normal">,<sp/>0),</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">].get(</highlight><highlight class="stringliteral">&apos;KERNEL_DY&apos;</highlight><highlight class="normal">,<sp/>0))</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibVersion<sp/>=<sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;bfk_VERSION&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>calibVersion<sp/>==<sp/>1.0:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.log.info(</highlight><highlight class="stringliteral">&quot;Old<sp/>Version<sp/>of<sp/>brighter-fatter<sp/>kernel<sp/>found.<sp/>Current<sp/>version:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;{calib._VERSION}.<sp/>The<sp/>new<sp/>attribute<sp/>&apos;expIdMask&apos;<sp/>will<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;populated<sp/>with<sp/>&apos;True&apos;<sp/>values,<sp/>and<sp/>the<sp/>new<sp/>attributes<sp/>&apos;rawMeans&apos;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;and<sp/>&apos;rawVariances&apos;<sp/>will<sp/>be<sp/>populated<sp/>with<sp/>the<sp/>masked<sp/>&apos;means&apos;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;and<sp/>&apos;variances&apos;<sp/>values.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>use<sp/>&apos;means&apos;,<sp/>because<sp/>&apos;expIdMask&apos;<sp/>does<sp/>not<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.expIdMask<sp/>=<sp/>{amp:<sp/>np.repeat(</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>len(dictionary[</highlight><highlight class="stringliteral">&apos;means&apos;</highlight><highlight class="normal">][amp]))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;means&apos;</highlight><highlight class="normal">]}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.rawMeans<sp/>=<sp/>{amp:<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;means&apos;</highlight><highlight class="normal">][amp])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;means&apos;</highlight><highlight class="normal">]}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.rawVariances<sp/>=<sp/>{amp:<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;variances&apos;</highlight><highlight class="normal">][amp])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;variances&apos;</highlight><highlight class="normal">]}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>calibVersion<sp/>==<sp/>1.1:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.expIdMask<sp/>=<sp/>{amp:<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;expIdMask&apos;</highlight><highlight class="normal">][amp])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;expIdMask&apos;</highlight><highlight class="normal">]}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.rawMeans<sp/>=<sp/>{amp:<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;rawMeans&apos;</highlight><highlight class="normal">][amp])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;rawMeans&apos;</highlight><highlight class="normal">]}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.rawVariances<sp/>=<sp/>{amp:<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;rawVariances&apos;</highlight><highlight class="normal">][amp])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;rawVariances&apos;</highlight><highlight class="normal">]}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(f</highlight><highlight class="stringliteral">&quot;Unknown<sp/>version<sp/>for<sp/>brighter-fatter<sp/>kernel:<sp/>{calibVersion}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Lengths<sp/>for<sp/>reshape:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_,<sp/>smallLength,<sp/>nObs<sp/>=<sp/>calib.getLengths()</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallShapeSide<sp/>=<sp/>int(np.sqrt(smallLength))</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.rawXcorrs<sp/>=<sp/>{amp:<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;rawXcorrs&apos;</highlight><highlight class="normal">][amp]).reshape((nObs,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallShapeSide,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallShapeSide))</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;rawXcorrs&apos;</highlight><highlight class="normal">]}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.gain<sp/>=<sp/>dictionary[</highlight><highlight class="stringliteral">&apos;gain&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.noise<sp/>=<sp/>dictionary[</highlight><highlight class="stringliteral">&apos;noise&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.meanXcorrs<sp/>=<sp/>{amp:<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;meanXcorrs&apos;</highlight><highlight class="normal">][amp]).reshape(calib.shape)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;rawXcorrs&apos;</highlight><highlight class="normal">]}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.ampKernels<sp/>=<sp/>{amp:<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;ampKernels&apos;</highlight><highlight class="normal">][amp]).reshape(calib.shape)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;ampKernels&apos;</highlight><highlight class="normal">]}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.valid<sp/>=<sp/>{amp:<sp/>bool(value)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;valid&apos;</highlight><highlight class="normal">].items()}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.badAmps<sp/>=<sp/>[amp<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>valid<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;valid&apos;</highlight><highlight class="normal">].items()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>valid<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.detKernels<sp/>=<sp/>{det:<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;detKernels&apos;</highlight><highlight class="normal">][det]).reshape(calib.shape)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>det<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;detKernels&apos;</highlight><highlight class="normal">]}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.updateMetadata()</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calib</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6cb3d79c7cabd21e7fe3191841f029dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6cb3d79c7cabd21e7fe3191841f029dd" kindref="member">toDict</ref>(self):</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Return<sp/>a<sp/>dictionary<sp/>containing<sp/>the<sp/>calibration<sp/>properties.</highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>dictionary<sp/>should<sp/>be<sp/>able<sp/>to<sp/>be<sp/>round-tripped<sp/>through</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`fromDict`.</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary<sp/>:<sp/>`dict`</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>of<sp/>properties.</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6a485d3c51f279846f636ac507554aa0" kindref="member">updateMetadata</ref>()</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata<sp/>=<sp/>self.getMetadata()</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[&apos;metadata&apos;</highlight><highlight class="normal">]<sp/>=<sp/>metadata</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Lengths<sp/>for<sp/>ravel:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernelLength,<sp/>smallLength,<sp/>nObs<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a8e652cf6ffca80e05c53906270f41b14" kindref="member">getLengths</ref>()</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;expIdMask&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>np.array(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a54889ad029f8c4e7058d416beafd0ecb" kindref="member">expIdMask</ref>[amp]).tolist()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a54889ad029f8c4e7058d416beafd0ecb" kindref="member">expIdMask</ref>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;rawMeans&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>np.array(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1af7cadcb6255a1a6e76a46d09adbd2d3f" kindref="member">rawMeans</ref>[amp]).tolist()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1af7cadcb6255a1a6e76a46d09adbd2d3f" kindref="member">rawMeans</ref>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;rawVariances&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>np.array(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a2873bccff855be875c1d9f7f7f779273" kindref="member">rawVariances</ref>[amp]).tolist()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a2873bccff855be875c1d9f7f7f779273" kindref="member">rawVariances</ref>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6ff85a572f6470e3bd07c6fdd1116ebf" kindref="member">rawXcorrs</ref>.keys():</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>we<sp/>need<sp/>to<sp/>repack<sp/>the<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correlationShape<sp/>=<sp/>np.array(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6ff85a572f6470e3bd07c6fdd1116ebf" kindref="member">rawXcorrs</ref>[amp]).shape</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nObs<sp/>!=<sp/>correlationShape[0]:</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>correlationShape[0]<sp/>==<sp/>np.sum(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a54889ad029f8c4e7058d416beafd0ecb" kindref="member">expIdMask</ref>[amp]):</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repack<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a89e6511f5b175629f4376aa17499ea3d" kindref="member">repackCorrelations</ref>(amp,<sp/>correlationShape)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>coerce<sp/>rawXcorrs<sp/>into<sp/>appropriate<sp/>shape<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(have<sp/>%d<sp/>correlations,<sp/>but<sp/>expect<sp/>to<sp/>see<sp/>%d.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correlationShape[0],<sp/>np.sum(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a54889ad029f8c4e7058d416beafd0ecb" kindref="member">expIdMask</ref>[amp]))</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;rawXcorrs&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>np.array(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6ff85a572f6470e3bd07c6fdd1116ebf" kindref="member">rawXcorrs</ref>[amp]).reshape(nObs*smallLength).tolist()</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6ff85a572f6470e3bd07c6fdd1116ebf" kindref="member">rawXcorrs</ref>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;badAmps&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a74ab11e88ea7ac530cb7cd379f534c74" kindref="member">badAmps</ref></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;gain&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1ade5cd0955be01d8864a5883bf6917849" kindref="member">gain</ref></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;noise&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6023047780897e147f15c01182cd17fe" kindref="member">noise</ref></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;meanXcorrs&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a7c777594c6034307524d893e992d6594" kindref="member">meanXcorrs</ref>[amp].reshape(kernelLength).tolist()</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a7c777594c6034307524d893e992d6594" kindref="member">meanXcorrs</ref>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;ampKernels&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a4cd7df8e30c23eabad61c6e99d095c69" kindref="member">ampKernels</ref>[amp].reshape(kernelLength).tolist()</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a4cd7df8e30c23eabad61c6e99d095c69" kindref="member">ampKernels</ref>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;valid&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1adde3ce23227897c603c9a15f7e43256c" kindref="member">valid</ref></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;detKernels&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{det:<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a3f500e8b80af1049b474592c6c2cf2cb" kindref="member">detKernels</ref>[det].reshape(kernelLength).tolist()</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>det<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a3f500e8b80af1049b474592c6c2cf2cb" kindref="member">detKernels</ref>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outDict</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a4e4ebf58c4aa4805b95a21c13d375ee5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a4e4ebf58c4aa4805b95a21c13d375ee5" kindref="member">fromTable</ref>(cls,<sp/>tableList):</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Construct<sp/>calibration<sp/>from<sp/>a<sp/>list<sp/>of<sp/>tables.</highlight></codeline>
<codeline lineno="368"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="369"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>uses<sp/>the<sp/>`fromDict`<sp/>method<sp/>to<sp/>create<sp/>the</highlight></codeline>
<codeline lineno="370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibration,<sp/>after<sp/>constructing<sp/>an<sp/>appropriate<sp/>dictionary<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>input<sp/>tables.</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableList<sp/>:<sp/>`list`<sp/>[`astropy.table.Table`]</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List<sp/>of<sp/>tables<sp/>to<sp/>use<sp/>to<sp/>construct<sp/>the<sp/>brighter-fatter</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibration.</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>:<sp/>`<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel" kindref="compound">lsst.ip.isr.BrighterFatterKernel</ref>`</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>calibration<sp/>defined<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>tables.</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ampTable<sp/>=<sp/>tableList[0]</highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="386"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata<sp/>=<sp/>ampTable.meta</highlight></codeline>
<codeline lineno="387"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[&apos;metadata&apos;</highlight><highlight class="normal">]<sp/>=<sp/>metadata</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amps<sp/>=<sp/>ampTable[</highlight><highlight class="stringliteral">&apos;AMPLIFIER&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Determine<sp/>version<sp/>for<sp/>expected<sp/>values.<sp/><sp/>The<sp/>``fromDict``</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>method<sp/>can<sp/>unpack<sp/>either,<sp/>but<sp/>the<sp/>appropriate<sp/>fields<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>be<sp/>supplied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibVersion<sp/>=<sp/>metadata[</highlight><highlight class="stringliteral">&apos;bfk_VERSION&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>calibVersion<sp/>==<sp/>1.0:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>expect<sp/>to<sp/>find<sp/>``means``<sp/>and<sp/>``variances``<sp/>for<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>case,<sp/>and<sp/>will<sp/>construct<sp/>an<sp/>``expIdMask``<sp/>from<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>parameters<sp/>in<sp/>the<sp/>``fromDict``<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawMeanList<sp/>=<sp/>ampTable[</highlight><highlight class="stringliteral">&apos;MEANS&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawVarianceList<sp/>=<sp/>ampTable[</highlight><highlight class="stringliteral">&apos;VARIANCES&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;means&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>mean<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>mean<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(amps,<sp/>rawMeanList)}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;variances&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>var<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(amps,<sp/>rawVarianceList)}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>calibVersion<sp/>==<sp/>1.1:</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>will<sp/>have<sp/>``rawMeans``<sp/>and<sp/>``rawVariances``,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>are<sp/>filtered<sp/>via<sp/>the<sp/>``expIdMask``<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expIdMaskList<sp/>=<sp/>ampTable[</highlight><highlight class="stringliteral">&apos;EXP_ID_MASK&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawMeanList<sp/>=<sp/>ampTable[</highlight><highlight class="stringliteral">&apos;RAW_MEANS&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawVarianceList<sp/>=<sp/>ampTable[</highlight><highlight class="stringliteral">&apos;RAW_VARIANCES&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;expIdMask&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>mask<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>mask<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(amps,<sp/>expIdMaskList)}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;rawMeans&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>mean<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>mean<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(amps,<sp/>rawMeanList)}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;rawVariances&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>var<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(amps,<sp/>rawVarianceList)}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(f</highlight><highlight class="stringliteral">&quot;Unknown<sp/>version<sp/>for<sp/>brighter-fatter<sp/>kernel:<sp/>{calibVersion}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawXcorrs<sp/>=<sp/>ampTable[</highlight><highlight class="stringliteral">&apos;RAW_XCORRS&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gainList<sp/>=<sp/>ampTable[</highlight><highlight class="stringliteral">&apos;GAIN&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noiseList<sp/>=<sp/>ampTable[</highlight><highlight class="stringliteral">&apos;NOISE&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meanXcorrs<sp/>=<sp/>ampTable[</highlight><highlight class="stringliteral">&apos;MEAN_XCORRS&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ampKernels<sp/>=<sp/>ampTable[</highlight><highlight class="stringliteral">&apos;KERNEL&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validList<sp/>=<sp/>ampTable[</highlight><highlight class="stringliteral">&apos;VALID&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;rawXcorrs&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>kernel<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>kernel<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(amps,<sp/>rawXcorrs)}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;gain&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>gain<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>gain<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(amps,<sp/>gainList)}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;noise&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>noise<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>noise<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(amps,<sp/>noiseList)}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;meanXcorrs&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>kernel<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>kernel<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(amps,<sp/>meanXcorrs)}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;ampKernels&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>kernel<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>kernel<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(amps,<sp/>ampKernels)}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;valid&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{amp:<sp/>bool(valid)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>valid<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(amps,<sp/>validList)}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;badAmps&apos;</highlight><highlight class="normal">]<sp/>=<sp/>[amp<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp,<sp/>valid<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inDict[</highlight><highlight class="stringliteral">&apos;valid&apos;</highlight><highlight class="normal">].items()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>valid<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(tableList)<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detTable<sp/>=<sp/>tableList[1]</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;detKernels&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{det:<sp/>kernel<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>det,<sp/>kernel</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(detTable[</highlight><highlight class="stringliteral">&apos;DETECTOR&apos;</highlight><highlight class="normal">],<sp/>detTable[</highlight><highlight class="stringliteral">&apos;KERNEL&apos;</highlight><highlight class="normal">])}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;detKernels&apos;</highlight><highlight class="normal">]<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cls.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1adafc0c9517f6d06a482e0e7741b38f4f" kindref="member">fromDict</ref>(inDict)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1ac22696207edaf553ef7ae51f6c106fd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1ac22696207edaf553ef7ae51f6c106fd0" kindref="member">toTable</ref>(self):</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Construct<sp/>a<sp/>list<sp/>of<sp/>tables<sp/>containing<sp/>the<sp/>information<sp/>in<sp/>this</highlight></codeline>
<codeline lineno="447"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibration.</highlight></codeline>
<codeline lineno="448"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="449"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>list<sp/>of<sp/>tables<sp/>should<sp/>create<sp/>an<sp/>identical<sp/>calibration</highlight></codeline>
<codeline lineno="450"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after<sp/>being<sp/>passed<sp/>to<sp/>this<sp/></highlight><highlight class="keyword">class</highlight><highlight class="stringliteral">&apos;s<sp/>fromTable<sp/>method.</highlight></codeline>
<codeline lineno="451"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="452"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="454"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableList<sp/>:<sp/>`list`<sp/>[`lsst.afw.table.Table`]</highlight></codeline>
<codeline lineno="455"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List<sp/>of<sp/>tables<sp/>containing<sp/>the<sp/>crosstalk<sp/>calibration</highlight></codeline>
<codeline lineno="456"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>information.</highlight></codeline>
<codeline lineno="457"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="458"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="459"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableList<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="460"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6a485d3c51f279846f636ac507554aa0" kindref="member">updateMetadata</ref>()</highlight></codeline>
<codeline lineno="461"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="462"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Lengths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernelLength,<sp/>smallLength,<sp/>nObs<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a8e652cf6ffca80e05c53906270f41b14" kindref="member">getLengths</ref>()</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ampList<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expIdMaskList<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawMeanList<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawVarianceList<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawXcorrs<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gainList<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noiseList<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meanXcorrsList<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernelList<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validList<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a920ed06bb5bf961100470d899d848dc5" kindref="member">level</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;AMP&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1af7cadcb6255a1a6e76a46d09adbd2d3f" kindref="member">rawMeans</ref>.keys():</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ampList.append(amp)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expIdMaskList.append(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a54889ad029f8c4e7058d416beafd0ecb" kindref="member">expIdMask</ref>[amp])</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawMeanList.append(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1af7cadcb6255a1a6e76a46d09adbd2d3f" kindref="member">rawMeans</ref>[amp])</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawVarianceList.append(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a2873bccff855be875c1d9f7f7f779273" kindref="member">rawVariances</ref>[amp])</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correlationShape<sp/>=<sp/>np.array(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6ff85a572f6470e3bd07c6fdd1116ebf" kindref="member">rawXcorrs</ref>[amp]).shape</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nObs<sp/>!=<sp/>correlationShape[0]:</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>correlationShape[0]<sp/>==<sp/>np.sum(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a54889ad029f8c4e7058d416beafd0ecb" kindref="member">expIdMask</ref>[amp]):</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repack<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a89e6511f5b175629f4376aa17499ea3d" kindref="member">repackCorrelations</ref>(amp,<sp/>correlationShape)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>coerce<sp/>rawXcorrs<sp/>into<sp/>appropriate<sp/>shape<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(have<sp/>%d<sp/>correlations,<sp/>but<sp/>expect<sp/>to<sp/>see<sp/>%d.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correlationShape[0],<sp/>np.sum(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a54889ad029f8c4e7058d416beafd0ecb" kindref="member">expIdMask</ref>[amp]))</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawXcorrs.append(np.array(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6ff85a572f6470e3bd07c6fdd1116ebf" kindref="member">rawXcorrs</ref>[amp]).reshape(nObs*smallLength).tolist())</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gainList.append(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1ade5cd0955be01d8864a5883bf6917849" kindref="member">gain</ref>[amp])</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noiseList.append(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6023047780897e147f15c01182cd17fe" kindref="member">noise</ref>[amp])</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meanXcorrsList.append(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a7c777594c6034307524d893e992d6594" kindref="member">meanXcorrs</ref>[amp].reshape(kernelLength).tolist())</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernelList.append(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a4cd7df8e30c23eabad61c6e99d095c69" kindref="member">ampKernels</ref>[amp].reshape(kernelLength).tolist())</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validList.append(int(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1adde3ce23227897c603c9a15f7e43256c" kindref="member">valid</ref>[amp]<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>(amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a74ab11e88ea7ac530cb7cd379f534c74" kindref="member">badAmps</ref>)))</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ampTable<sp/>=<sp/>Table({</highlight><highlight class="stringliteral">&apos;AMPLIFIER&apos;</highlight><highlight class="normal">:<sp/>ampList,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;EXP_ID_MASK&apos;</highlight><highlight class="normal">:<sp/>expIdMaskList,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;RAW_MEANS&apos;</highlight><highlight class="normal">:<sp/>rawMeanList,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;RAW_VARIANCES&apos;</highlight><highlight class="normal">:<sp/>rawVarianceList,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;RAW_XCORRS&apos;</highlight><highlight class="normal">:<sp/>rawXcorrs,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;GAIN&apos;</highlight><highlight class="normal">:<sp/>gainList,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;NOISE&apos;</highlight><highlight class="normal">:<sp/>noiseList,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;MEAN_XCORRS&apos;</highlight><highlight class="normal">:<sp/>meanXcorrsList,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;KERNEL&apos;</highlight><highlight class="normal">:<sp/>kernelList,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;VALID&apos;</highlight><highlight class="normal">:<sp/>validList,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ampTable.meta<sp/>=<sp/>self.getMetadata().<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6cb3d79c7cabd21e7fe3191841f029dd" kindref="member">toDict</ref>()</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableList.append(ampTable)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a3f500e8b80af1049b474592c6c2cf2cb" kindref="member">detKernels</ref>):</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detList<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernelList<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>det<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a3f500e8b80af1049b474592c6c2cf2cb" kindref="member">detKernels</ref>.keys():</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detList.append(det)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernelList.append(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a3f500e8b80af1049b474592c6c2cf2cb" kindref="member">detKernels</ref>[det].reshape(kernelLength).tolist())</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detTable<sp/>=<sp/>Table({</highlight><highlight class="stringliteral">&apos;DETECTOR&apos;</highlight><highlight class="normal">:<sp/>detList,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;KERNEL&apos;</highlight><highlight class="normal">:<sp/>kernelList})</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detTable.meta<sp/>=<sp/>self.getMetadata().<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6cb3d79c7cabd21e7fe3191841f029dd" kindref="member">toDict</ref>()</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableList.append(detTable)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tableList</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a89e6511f5b175629f4376aa17499ea3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a89e6511f5b175629f4376aa17499ea3d" kindref="member">repackCorrelations</ref>(self,<sp/>amp,<sp/>correlationShape):</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;If<sp/>the<sp/>correlations<sp/>were<sp/>masked,<sp/>they<sp/>need<sp/>to<sp/>be<sp/>repacked<sp/>into<sp/>the</highlight></codeline>
<codeline lineno="533"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correct<sp/>shape.</highlight></codeline>
<codeline lineno="534"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="535"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="536"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="537"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amp<sp/>:<sp/>`str`</highlight></codeline>
<codeline lineno="538"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Amplifier<sp/>needing<sp/>repacked.</highlight></codeline>
<codeline lineno="539"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correlationShape<sp/>:<sp/>`tuple`<sp/>[`int`],<sp/>(3,<sp/>)</highlight></codeline>
<codeline lineno="540"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shape<sp/>the<sp/>correlations<sp/>are<sp/>expected<sp/>to<sp/>take.</highlight></codeline>
<codeline lineno="541"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="542"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repackedCorrelations<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="543"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="544"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>maskValue<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a54889ad029f8c4e7058d416beafd0ecb" kindref="member">expIdMask</ref>[amp]:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>maskValue:</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repackedCorrelations.append(self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6ff85a572f6470e3bd07c6fdd1116ebf" kindref="member">rawXcorrs</ref>[amp][idx])</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repackedCorrelations.append(np.full((correlationShape[1],<sp/>correlationShape[2]),<sp/>np.nan))</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a6ff85a572f6470e3bd07c6fdd1116ebf" kindref="member">rawXcorrs</ref>[amp]<sp/>=<sp/>repackedCorrelations</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Implementation<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1aec9d62cc7ddbaa872d006dbce6042a01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1aec9d62cc7ddbaa872d006dbce6042a01" kindref="member">makeDetectorKernelFromAmpwiseKernels</ref>(self,<sp/>detectorName,<sp/>ampsToExclude=[]):</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Average<sp/>the<sp/>amplifier<sp/>level<sp/>kernels<sp/>to<sp/>create<sp/>a<sp/>detector<sp/>level</highlight></codeline>
<codeline lineno="555"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel.<sp/><sp/>There<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>no<sp/>change<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>index<sp/>ordering/orientation<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>averaging.</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detectorName<sp/>:<sp/>`str`</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Detector<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>which<sp/>the<sp/>averaged<sp/>kernel<sp/>will<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ampsToExclude<sp/>:<sp/>`list`<sp/>[`str`],<sp/>optional</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Amps<sp/>that<sp/>should<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>be<sp/>included<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>average.</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="565"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inKernels<sp/>=<sp/>np.array([self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a4cd7df8e30c23eabad61c6e99d095c69" kindref="member">ampKernels</ref>[amp]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a4cd7df8e30c23eabad61c6e99d095c69" kindref="member">ampKernels</ref><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ampsToExclude])</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avgKernel<sp/>=<sp/>np.zeros_like(inKernels[0])</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sctrl<sp/>=<sp/>afwMath.StatisticsControl()</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sctrl.setNumSigmaClip(5.0)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(np.shape(avgKernel)[0]):</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(np.shape(avgKernel)[1]):</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avgKernel[i,<sp/>j]<sp/>=<sp/>afwMath.makeStatistics(inKernels[:,<sp/>i,<sp/>j],</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afwMath.MEANCLIP,<sp/>sctrl).getValue()</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a3f500e8b80af1049b474592c6c2cf2cb" kindref="member">detKernels</ref>[detectorName]<sp/>=<sp/>avgKernel</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a76929064fe3c55ad9d961cb650b12d8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1brighter_fatter_kernel_1_1_brighter_fatter_kernel_1a76929064fe3c55ad9d961cb650b12d8d" kindref="member">replaceDetectorKernelWithAmpKernel</ref>(self,<sp/>ampName,<sp/>detectorName):</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.detKernel[detectorName]<sp/>=<sp/>self.ampKernel[ampName]</highlight></codeline>
    </programlisting>
    <location file="python/lsst/ip/isr/brighterFatterKernel.py"/>
  </compounddef>
</doxygen>
