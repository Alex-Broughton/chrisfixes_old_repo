<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="crosstalk_8py" kind="file" language="Python">
    <compoundname>crosstalk.py</compoundname>
    <innerclass refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib" prot="public">lsst::ip::isr::crosstalk::CrosstalkCalib</innerclass>
    <innerclass refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config" prot="public">lsst::ip::isr::crosstalk::CrosstalkConfig</innerclass>
    <innerclass refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_task" prot="public">lsst::ip::isr::crosstalk::CrosstalkTask</innerclass>
    <innerclass refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_null_crosstalk_task" prot="public">lsst::ip::isr::crosstalk::NullCrosstalkTask</innerclass>
    <innernamespace refid="namespacelsst">lsst</innernamespace>
    <innernamespace refid="namespacelsst_1_1ip">lsst::ip</innernamespace>
    <innernamespace refid="namespacelsst_1_1ip_1_1isr">lsst::ip::isr</innernamespace>
    <innernamespace refid="namespacelsst_1_1ip_1_1isr_1_1crosstalk">lsst::ip::isr::crosstalk</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacelsst_1_1ip_1_1isr_1_1crosstalk" refkind="compound"><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LSST<sp/>Data<sp/>Management<sp/>System</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>2008-2017<sp/>AURA/LSST.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>product<sp/>includes<sp/>software<sp/>developed<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>LSST<sp/>Project<sp/>(http://www.lsst.org/).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>LSST<sp/>License<sp/>Statement<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>see<sp/>&lt;https://www.lsstcorp.org/LegalNotices/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">Apply<sp/>intra-detector<sp/>crosstalk<sp/>corrections</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">__all__<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;CrosstalkCalib&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CrosstalkConfig&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CrosstalkTask&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NullCrosstalkTask&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>astropy.table<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Table</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacelsst_1_1afw_1_1math" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.math</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacelsst_1_1afw_1_1detection" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.detection</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>lsst.daf.butler</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="classlsst_1_1pex_1_1config_1_1config_1_1__PexConfigGenericAlias" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/pex_config/g4f1969f4e1+b66847d792/doc/pex_config.tag">lsst.pex.config</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Config,<sp/>Field,<sp/>ChoiceField,<sp/>ListField</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>lsst.pipe.base<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Task</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacelsst_1_1ip_1_1isr" kindref="compound">lsst.ip.isr</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>IsrCalib</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib" kindref="compound">CrosstalkCalib</ref>(<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib" kindref="compound">IsrCalib</ref>):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Calibration<sp/>of<sp/>amp-to-amp<sp/>crosstalk<sp/>coefficients.</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>detector<sp/>:<sp/>`<ref refid="classlsst_1_1afw_1_1camera_geom_1_1_detector" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.cameraGeom.Detector</ref>`,<sp/>optional</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Detector<sp/>to<sp/>use<sp/>to<sp/>pull<sp/>coefficients<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>nAmp<sp/>:<sp/>`int`,<sp/>optional</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>amplifiers<sp/>to<sp/>initialize.</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>:<sp/>`logging.Logger`,<sp/>optional</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log<sp/>to<sp/>write<sp/>messages<sp/>to.</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>**kwargs<sp/>:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters<sp/>to<sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"><sp/>to<sp/>parent<sp/>constructor.</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>Notes</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>-----</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>The<sp/>crosstalk<sp/>attributes<sp/>stored<sp/>are:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>hasCrosstalk<sp/>:<sp/>`bool`</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Whether<sp/>there<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>crosstalk<sp/>defined<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>this<sp/>detector.</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>nAmp<sp/>:<sp/>`int`</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>amplifiers<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>this<sp/>detector.</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>crosstalkShape<sp/>:<sp/>`tuple`<sp/>[`int`,<sp/>`int`]</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>tuple<sp/>containing<sp/>the<sp/>shape<sp/>of<sp/>the<sp/>``coeffs``<sp/>matrix.<sp/><sp/>This</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>equivalent<sp/>to<sp/>(``nAmp``,<sp/>``nAmp``).</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>coeffs<sp/>:<sp/>`numpy.ndarray`</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>matrix<sp/>containing<sp/>the<sp/>crosstalk<sp/>coefficients.<sp/><sp/>coeff[i][j]</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contains<sp/>the<sp/>coefficients<sp/>to<sp/>calculate<sp/>the<sp/>contribution</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amplifier_j<sp/>has<sp/>on<sp/>amplifier_i<sp/>(each<sp/>row[i]<sp/>contains<sp/>the</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corrections<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>detector_i).</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>coeffErr<sp/>:<sp/>`numpy.ndarray`,<sp/>optional</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>matrix<sp/>(</highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>defined<sp/>by<sp/>``coeffs``)<sp/>containing<sp/>the<sp/>standard</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distribution<sp/>of<sp/>the<sp/>crosstalk<sp/>measurements.</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>coeffNum<sp/>:<sp/>`numpy.ndarray`,<sp/>optional</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>matrix<sp/>containing<sp/>the<sp/>number<sp/>of<sp/>pixel<sp/>pairs<sp/>used<sp/>to<sp/>measure</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>``coeffs``<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>``coeffErr``.</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>coeffValid<sp/>:<sp/>`numpy.ndarray`,<sp/>optional</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>matrix<sp/>of<sp/>Boolean<sp/>values<sp/>indicating<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>coefficient<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid,<sp/>defined<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>abs(coeff)<sp/>&gt;<sp/>coeffErr<sp/>/<sp/>sqrt(coeffNum).</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>interChip<sp/>:<sp/>`dict`<sp/>[`numpy.ndarray`]</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>dictionary<sp/>keyed<sp/>by<sp/>detectorName<sp/>containing<sp/>``coeffs``</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrices<sp/>used<sp/>to<sp/>correct<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>inter-chip<sp/>crosstalk<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>a</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/>on<sp/>the<sp/>detector<sp/>indicated.</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>_OBSTYPE<sp/>=<sp/>&apos;CROSSTALK&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>_SCHEMA<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Gen3<sp/>Crosstalk&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>_VERSION<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a335aafcc75e2dbd6517f73d717658784" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a335aafcc75e2dbd6517f73d717658784" kindref="member">__init__</ref>(self,<sp/>detector=None,<sp/>nAmp=0,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="91" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a1162712e4ad1f9b4ead2e096bd57252b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a1162712e4ad1f9b4ead2e096bd57252b" kindref="member">hasCrosstalk</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref><sp/>=<sp/>nAmp<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nAmp<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="93" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" kindref="member">crosstalkShape</ref><sp/>=<sp/>(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>,<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a70896522a8c70f9b527062436238cc05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a70896522a8c70f9b527062436238cc05" kindref="member">coeffs</ref><sp/>=<sp/>np.zeros(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" kindref="member">crosstalkShape</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a256cc5abe2f8efe8cbbb7def8a18707d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a256cc5abe2f8efe8cbbb7def8a18707d" kindref="member">coeffErr</ref><sp/>=<sp/>np.zeros(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" kindref="member">crosstalkShape</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a42a927b73f361f4d3ea269ba50206d36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a42a927b73f361f4d3ea269ba50206d36" kindref="member">coeffNum</ref><sp/>=<sp/>np.zeros(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" kindref="member">crosstalkShape</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=int)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a36f76e4c12ec71114827950534c3b45f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a36f76e4c12ec71114827950534c3b45f" kindref="member">coeffValid</ref><sp/>=<sp/>np.zeros(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" kindref="member">crosstalkShape</ref>,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=bool)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1aa9e50c72b69f9cfccccc56e814d7b172" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1aa9e50c72b69f9cfccccc56e814d7b172" kindref="member">interChip</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a335aafcc75e2dbd6517f73d717658784" kindref="member">__init__</ref>(**kwargs)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1ad3476abba40729c58801cd853baa64f7" kindref="member">requiredAttributes</ref><ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1aafa57ec8ed72627506866d39e7903637" kindref="member">requiredAttributes</ref><ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a3bd634ef75e3710c93d50f7c1829961f" kindref="member">requiredAttributes</ref>.update([</highlight><highlight class="stringliteral">&apos;hasCrosstalk&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;nAmp&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;coeffs&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;coeffErr&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;coeffNum&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;coeffValid&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;interChip&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>detector:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1aa4a68997772b1898843219a8d078e228" kindref="member">fromDetector</ref><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a89ab82e7112c51558cab8822723684a9" kindref="member">fromDetector</ref>(detector)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a95d989721a3535579164c8b1ce762268" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a95d989721a3535579164c8b1ce762268" kindref="member">updateMetadata</ref>(self,<sp/>setDate=False,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Update<sp/>calibration<sp/>metadata.</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>calls<sp/>the<sp/>base<sp/></highlight><highlight class="keyword">class</highlight><highlight class="stringliteral">&apos;s<sp/>method<sp/>after<sp/>ensuring<sp/>the<sp/>required</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibration<sp/>keywords<sp/>will<sp/>be<sp/>saved.</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDate<sp/>:<sp/>`bool`,<sp/>optional</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Update<sp/>the<sp/>CALIBDATE<sp/>fields<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>metadata<sp/>to<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.<sp/>Defaults<sp/>to<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs<sp/>:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Other<sp/>keyword<sp/>parameters<sp/>to<sp/>set<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>metadata.</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[&apos;DETECTOR&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a97f2f0d2c3de7c039afc341db5bccd91" kindref="member">_detectorId</ref><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1ab98b6fcaa8c3898a4f677f8138c7c92c" kindref="member">_detectorId</ref></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;DETECTOR_NAME&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a8133fc3d4ddd7d9ded66402f810f4509" kindref="member">_detectorName</ref><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1ab9b5e7e12d0e85914e9c1e3e54153995" kindref="member">_detectorName</ref></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;DETECTOR_SERIAL&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a0ea3e170a2ebd7b288a6191b96e7fe0a" kindref="member">_detectorSerial</ref><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a661b505955bd66805f0e131c786b9c87" kindref="member">_detectorSerial</ref></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;HAS_CROSSTALK&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a1162712e4ad1f9b4ead2e096bd57252b" kindref="member">hasCrosstalk</ref></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;NAMP&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" kindref="member">crosstalkShape</ref><sp/>=<sp/>(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>,<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kwargs[</highlight><highlight class="stringliteral">&apos;CROSSTALK_SHAPE&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" kindref="member">crosstalkShape</ref></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a95d989721a3535579164c8b1ce762268" kindref="member">updateMetadata</ref>(setDate=setDate,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a89ab82e7112c51558cab8822723684a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a89ab82e7112c51558cab8822723684a9" kindref="member">fromDetector</ref>(self,<sp/>detector,<sp/>coeffVector=None):</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Set<sp/>calibration<sp/>parameters<sp/>from<sp/>the<sp/>detector.</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector<sp/>:<sp/>`<ref refid="classlsst_1_1afw_1_1camera_geom_1_1_detector" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.cameraGeom.Detector</ref>`</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Detector<sp/>to<sp/>use<sp/>to<sp/>set<sp/>parameters<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeffVector<sp/>:<sp/>`numpy.array`,<sp/>optional</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>the<sp/>detector<sp/>geometry<sp/>(bounding<sp/>boxes<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>flip</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>information),<sp/>but<sp/>use<sp/>``coeffVector``<sp/>instead<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>of<sp/>``detector.getCrosstalk()``.</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>:<sp/>`<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib" kindref="compound">lsst.ip.isr.CrosstalkCalib</ref>`</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>calibration<sp/>constructed<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>the<sp/>detector.</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>detector.hasCrosstalk()<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>coeffVector:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a97f2f0d2c3de7c039afc341db5bccd91" kindref="member">_detectorId</ref><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1ab98b6fcaa8c3898a4f677f8138c7c92c" kindref="member">_detectorId</ref><sp/>=<sp/>detector.getId()</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a8133fc3d4ddd7d9ded66402f810f4509" kindref="member">_detectorName</ref><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1ab9b5e7e12d0e85914e9c1e3e54153995" kindref="member">_detectorName</ref><sp/>=<sp/>detector.getName()</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a0ea3e170a2ebd7b288a6191b96e7fe0a" kindref="member">_detectorSerial</ref><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a661b505955bd66805f0e131c786b9c87" kindref="member">_detectorSerial</ref><sp/>=<sp/>detector.getSerial()</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref><sp/>=<sp/>len(detector)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" kindref="member">crosstalkShape</ref><sp/>=<sp/>(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>,<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>coeffVector<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalkCoeffs<sp/>=<sp/>coeffVector</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalkCoeffs<sp/>=<sp/>detector.getCrosstalk()</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(crosstalkCoeffs)<sp/>==<sp/>1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>crosstalkCoeffs[0]<sp/>==<sp/>0.0:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a70896522a8c70f9b527062436238cc05" kindref="member">coeffs</ref><sp/>=<sp/>np.array(crosstalkCoeffs).reshape(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" kindref="member">crosstalkShape</ref>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a70896522a8c70f9b527062436238cc05" kindref="member">coeffs</ref>.shape<sp/>!=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" kindref="member">crosstalkShape</ref>:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;Crosstalk<sp/>coefficients<sp/>do<sp/>not<sp/>match<sp/>detector<sp/>shape.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;{self.crosstalkShape}<sp/>{self.nAmp}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a256cc5abe2f8efe8cbbb7def8a18707d" kindref="member">coeffErr</ref><sp/>=<sp/>np.zeros(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" kindref="member">crosstalkShape</ref>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a42a927b73f361f4d3ea269ba50206d36" kindref="member">coeffNum</ref><sp/>=<sp/>np.zeros(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" kindref="member">crosstalkShape</ref>,<sp/>dtype=int)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a36f76e4c12ec71114827950534c3b45f" kindref="member">coeffValid</ref><sp/>=<sp/>np.ones(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" kindref="member">crosstalkShape</ref>,<sp/>dtype=bool)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1aa9e50c72b69f9cfccccc56e814d7b172" kindref="member">interChip</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a1162712e4ad1f9b4ead2e096bd57252b" kindref="member">hasCrosstalk</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a800537ed1777875f9f9fd973a83c3809" kindref="member">updateMetadata</ref><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a95d989721a3535579164c8b1ce762268" kindref="member">updateMetadata</ref>()</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1af577ce5ea4a7263e6db7a711c30f874a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1af577ce5ea4a7263e6db7a711c30f874a" kindref="member">fromDict</ref>(cls,<sp/>dictionary):</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Construct<sp/>a<sp/>calibration<sp/>from<sp/>a<sp/>dictionary<sp/>of<sp/>properties.</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Must<sp/>be<sp/>implemented<sp/>by<sp/>the<sp/>specific<sp/>calibration<sp/>subclasses.</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary<sp/>:<sp/>`dict`</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>of<sp/>properties.</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>:<sp/>`lsst.ip.isr.CalibType`</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constructed<sp/>calibration.</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>------</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RuntimeError</highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raised<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>supplied<sp/>dictionary<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/>different</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibration.</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>=<sp/>cls()</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>calib._OBSTYPE<sp/>!=<sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;OBSTYPE&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(f</highlight><highlight class="stringliteral">&quot;Incorrect<sp/>crosstalk<sp/>supplied.<sp/><sp/>Expected<sp/>{calib._OBSTYPE},<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;found<sp/>{dictionary[&apos;metadata&apos;][&apos;OBSTYPE&apos;]}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.setMetadata(dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;detectorName&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._detectorName<sp/>=<sp/>dictionary.get(</highlight><highlight class="stringliteral">&apos;detectorName&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;DETECTOR_NAME&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._detectorName<sp/>=<sp/>dictionary.get(</highlight><highlight class="stringliteral">&apos;DETECTOR_NAME&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;DET_NAME&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._detectorName<sp/>=<sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;DET_NAME&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._detectorName<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;detectorSerial&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._detectorSerial<sp/>=<sp/>dictionary.get(</highlight><highlight class="stringliteral">&apos;detectorSerial&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;DETECTOR_SERIAL&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._detectorSerial<sp/>=<sp/>dictionary.get(</highlight><highlight class="stringliteral">&apos;DETECTOR_SERIAL&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;DET_SER&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._detectorSerial<sp/>=<sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;DET_SER&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._detectorSerial<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;detectorId&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._detectorId<sp/>=<sp/>dictionary.get(</highlight><highlight class="stringliteral">&apos;detectorId&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;DETECTOR&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._detectorId<sp/>=<sp/>dictionary.get(</highlight><highlight class="stringliteral">&apos;DETECTOR&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;DETECTOR&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._detectorId<sp/>=<sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;DETECTOR&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>calib._detectorSerial:</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._detectorId<sp/>=<sp/>calib._detectorSerial</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._detectorId<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;instrument&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._instrument<sp/>=<sp/>dictionary.get(</highlight><highlight class="stringliteral">&apos;instrument&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;INSTRUME&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._instrument<sp/>=<sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;INSTRUME&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib._instrument<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.hasCrosstalk<sp/>=<sp/>dictionary.get(</highlight><highlight class="stringliteral">&apos;hasCrosstalk&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">].get(</highlight><highlight class="stringliteral">&apos;HAS_CROSSTALK&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>calib.hasCrosstalk:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.nAmp<sp/>=<sp/>dictionary.get(</highlight><highlight class="stringliteral">&apos;nAmp&apos;</highlight><highlight class="normal">,<sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">].get(</highlight><highlight class="stringliteral">&apos;NAMP&apos;</highlight><highlight class="normal">,<sp/>0))</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.crosstalkShape<sp/>=<sp/>(calib.nAmp,<sp/>calib.nAmp)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.coeffs<sp/>=<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;coeffs&apos;</highlight><highlight class="normal">]).reshape(calib.crosstalkShape)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;coeffErr&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.coeffErr<sp/>=<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;coeffErr&apos;</highlight><highlight class="normal">]).reshape(calib.crosstalkShape)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.coeffErr<sp/>=<sp/>np.zeros_like(calib.coeffs)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;coeffNum&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.coeffNum<sp/>=<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;coeffNum&apos;</highlight><highlight class="normal">]).reshape(calib.crosstalkShape)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.coeffNum<sp/>=<sp/>np.zeros_like(calib.coeffs,<sp/>dtype=int)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;coeffValid&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dictionary:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.coeffValid<sp/>=<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;coeffValid&apos;</highlight><highlight class="normal">]).reshape(calib.crosstalkShape)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.coeffValid<sp/>=<sp/>np.ones_like(calib.coeffs,<sp/>dtype=bool)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.interChip<sp/>=<sp/>dictionary.get(</highlight><highlight class="stringliteral">&apos;interChip&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>calib.interChip:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>detector<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>calib.interChip:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeffVector<sp/>=<sp/>calib.interChip[detector]</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.interChip[detector]<sp/>=<sp/>np.array(coeffVector).reshape(calib.crosstalkShape)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.updateMetadata()</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calib</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1ac171ee67c64e5dcfb0b9b7a4bab1f148" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1ac171ee67c64e5dcfb0b9b7a4bab1f148" kindref="member">toDict</ref>(self):</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Return<sp/>a<sp/>dictionary<sp/>containing<sp/>the<sp/>calibration<sp/>properties.</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>dictionary<sp/>should<sp/>be<sp/>able<sp/>to<sp/>be<sp/>round-tripped<sp/>through</highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`fromDict`.</highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="281"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="282"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary<sp/>:<sp/>`dict`</highlight></codeline>
<codeline lineno="284"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>of<sp/>properties.</highlight></codeline>
<codeline lineno="285"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a800537ed1777875f9f9fd973a83c3809" kindref="member">updateMetadata</ref><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a95d989721a3535579164c8b1ce762268" kindref="member">updateMetadata</ref>()</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a5aa43aac89d3efd55adb897b148fddc0" kindref="member">getMetadata</ref>()</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[&apos;metadata&apos;</highlight><highlight class="normal">]<sp/>=<sp/>metadata</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;hasCrosstalk&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a1162712e4ad1f9b4ead2e096bd57252b" kindref="member">hasCrosstalk</ref></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;nAmp&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;crosstalkShape&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ef3dce6498cef6f2dede1f6ceb40c23" kindref="member">crosstalkShape</ref></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctLength<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>*self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;coeffs&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a70896522a8c70f9b527062436238cc05" kindref="member">coeffs</ref>.reshape(ctLength).tolist()</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a256cc5abe2f8efe8cbbb7def8a18707d" kindref="member">coeffErr</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;coeffErr&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a256cc5abe2f8efe8cbbb7def8a18707d" kindref="member">coeffErr</ref>.reshape(ctLength).tolist()</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a42a927b73f361f4d3ea269ba50206d36" kindref="member">coeffNum</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;coeffNum&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a42a927b73f361f4d3ea269ba50206d36" kindref="member">coeffNum</ref>.reshape(ctLength).tolist()</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a36f76e4c12ec71114827950534c3b45f" kindref="member">coeffValid</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;coeffValid&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a36f76e4c12ec71114827950534c3b45f" kindref="member">coeffValid</ref>.reshape(ctLength).tolist()</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1aa9e50c72b69f9cfccccc56e814d7b172" kindref="member">interChip</ref>:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;interChip&apos;</highlight><highlight class="normal">]<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>detector<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1aa9e50c72b69f9cfccccc56e814d7b172" kindref="member">interChip</ref>:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;interChip&apos;</highlight><highlight class="normal">][detector]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1aa9e50c72b69f9cfccccc56e814d7b172" kindref="member">interChip</ref>[detector].reshape(ctLength).tolist()</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outDict</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a6d0b40b56e95815d70b32375ced6d40b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a6d0b40b56e95815d70b32375ced6d40b" kindref="member">fromTable</ref>(cls,<sp/>tableList):</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Construct<sp/>calibration<sp/>from<sp/>a<sp/>list<sp/>of<sp/>tables.</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>uses<sp/>the<sp/>`fromDict`<sp/>method<sp/>to<sp/>create<sp/>the</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibration,<sp/>after<sp/>constructing<sp/>an<sp/>appropriate<sp/>dictionary<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>input<sp/>tables.</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableList<sp/>:<sp/>`list`<sp/>[`lsst.afw.table.Table`]</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List<sp/>of<sp/>tables<sp/>to<sp/>use<sp/>to<sp/>construct<sp/>the<sp/>crosstalk</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibration.</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>:<sp/>`<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib" kindref="compound">lsst.ip.isr.CrosstalkCalib</ref>`</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>calibration<sp/>defined<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>tables.</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="333"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeffTable<sp/>=<sp/>tableList[0]</highlight></codeline>
<codeline lineno="334"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="335"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata<sp/>=<sp/>coeffTable.meta</highlight></codeline>
<codeline lineno="336"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[&apos;metadata&apos;</highlight><highlight class="normal">]<sp/>=<sp/>metadata</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;hasCrosstalk&apos;</highlight><highlight class="normal">]<sp/>=<sp/>metadata[</highlight><highlight class="stringliteral">&apos;HAS_CROSSTALK&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;nAmp&apos;</highlight><highlight class="normal">]<sp/>=<sp/>metadata[</highlight><highlight class="stringliteral">&apos;NAMP&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;coeffs&apos;</highlight><highlight class="normal">]<sp/>=<sp/>coeffTable[</highlight><highlight class="stringliteral">&apos;CT_COEFFS&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;CT_ERRORS&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coeffTable.columns:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;coeffErr&apos;</highlight><highlight class="normal">]<sp/>=<sp/>coeffTable[</highlight><highlight class="stringliteral">&apos;CT_ERRORS&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;CT_COUNTS&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coeffTable.columns:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;coeffNum&apos;</highlight><highlight class="normal">]<sp/>=<sp/>coeffTable[</highlight><highlight class="stringliteral">&apos;CT_COUNTS&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;CT_VALID&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coeffTable.columns:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;coeffValid&apos;</highlight><highlight class="normal">]<sp/>=<sp/>coeffTable[</highlight><highlight class="stringliteral">&apos;CT_VALID&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(tableList)<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;interChip&apos;</highlight><highlight class="normal">]<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interChipTable<sp/>=<sp/>tableList[1]</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>record<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>interChipTable:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;interChip&apos;</highlight><highlight class="normal">][record[</highlight><highlight class="stringliteral">&apos;IC_SOURCE_DET&apos;</highlight><highlight class="normal">]]<sp/>=<sp/>record[</highlight><highlight class="stringliteral">&apos;IC_COEFFS&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cls().<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1af577ce5ea4a7263e6db7a711c30f874a" kindref="member">fromDict</ref>(inDict)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a834d7e19e82bb372218b9e440636347d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a834d7e19e82bb372218b9e440636347d" kindref="member">toTable</ref>(self):</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Construct<sp/>a<sp/>list<sp/>of<sp/>tables<sp/>containing<sp/>the<sp/>information<sp/>in<sp/>this</highlight></codeline>
<codeline lineno="359"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibration.</highlight></codeline>
<codeline lineno="360"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="361"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>list<sp/>of<sp/>tables<sp/>should<sp/>create<sp/>an<sp/>identical<sp/>calibration</highlight></codeline>
<codeline lineno="362"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after<sp/>being<sp/>passed<sp/>to<sp/>this<sp/></highlight><highlight class="keyword">class</highlight><highlight class="stringliteral">&apos;s<sp/>fromTable<sp/>method.</highlight></codeline>
<codeline lineno="363"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="364"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="365"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="366"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableList<sp/>:<sp/>`list`<sp/>[`lsst.afw.table.Table`]</highlight></codeline>
<codeline lineno="367"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List<sp/>of<sp/>tables<sp/>containing<sp/>the<sp/>crosstalk<sp/>calibration</highlight></codeline>
<codeline lineno="368"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>information.</highlight></codeline>
<codeline lineno="369"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableList<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="372"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a800537ed1777875f9f9fd973a83c3809" kindref="member">updateMetadata</ref><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a95d989721a3535579164c8b1ce762268" kindref="member">updateMetadata</ref>()</highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catalog<sp/>=<sp/>Table([{&apos;CT_COEFFS&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a70896522a8c70f9b527062436238cc05" kindref="member">coeffs</ref>.reshape(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>*self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>),</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;CT_ERRORS&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a256cc5abe2f8efe8cbbb7def8a18707d" kindref="member">coeffErr</ref>.reshape(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>*self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>),</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;CT_COUNTS&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a42a927b73f361f4d3ea269ba50206d36" kindref="member">coeffNum</ref>.reshape(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>*self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>),</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;CT_VALID&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a36f76e4c12ec71114827950534c3b45f" kindref="member">coeffValid</ref>.reshape(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>*self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>),</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}])</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>filter<sp/>None,<sp/>because<sp/>astropy<sp/>can&apos;t<sp/>deal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inMeta<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a5aa43aac89d3efd55adb897b148fddc0" kindref="member">getMetadata</ref>().<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1ac171ee67c64e5dcfb0b9b7a4bab1f148" kindref="member">toDict</ref>()</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outMeta<sp/>=<sp/>{k:<sp/>v<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inMeta.items()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>v<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outMeta.update({k:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inMeta.items()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>v<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catalog.meta<sp/>=<sp/>outMeta</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableList.append(catalog)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1aa9e50c72b69f9cfccccc56e814d7b172" kindref="member">interChip</ref>:</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interChipTable<sp/>=<sp/>Table([{</highlight><highlight class="stringliteral">&apos;IC_SOURCE_DET&apos;</highlight><highlight class="normal">:<sp/>sourceDet,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;IC_COEFFS&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1aa9e50c72b69f9cfccccc56e814d7b172" kindref="member">interChip</ref>[sourceDet].reshape(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>*self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>)}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sourceDet<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1aa9e50c72b69f9cfccccc56e814d7b172" kindref="member">interChip</ref>.keys()])</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableList.append(interChipTable)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tableList</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Implementation<sp/>methods.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1aba597ab21cbe83370dbd2ce567ce1924" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1aba597ab21cbe83370dbd2ce567ce1924" kindref="member">extractAmp</ref>(image,<sp/>amp,<sp/>ampTarget,<sp/>isTrimmed=False):</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Extract<sp/>the<sp/>image<sp/>data<sp/>from<sp/>an<sp/>amp,<sp/>flipped<sp/>to<sp/>match<sp/>ampTarget.</highlight></codeline>
<codeline lineno="396"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="397"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="398"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="399"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/>:<sp/>`<ref refid="classlsst_1_1afw_1_1image_1_1_image" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.image.Image</ref>`<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>`<ref refid="classlsst_1_1afw_1_1image_1_1_masked_image" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.image.MaskedImage</ref>`</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Image<sp/>containing<sp/>the<sp/>amplifier<sp/>of<sp/>interest.</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amp<sp/>:<sp/>`<ref refid="classlsst_1_1afw_1_1camera_geom_1_1_amplifier" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.cameraGeom.Amplifier</ref>`</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Amplifier<sp/>on<sp/>image<sp/>to<sp/>extract.</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ampTarget<sp/>:<sp/>`<ref refid="classlsst_1_1afw_1_1camera_geom_1_1_amplifier" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.cameraGeom.Amplifier</ref>`</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Target<sp/>amplifier<sp/>that<sp/>the<sp/>extracted<sp/>image<sp/>will<sp/>be<sp/>flipped</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>match.</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isTrimmed<sp/>:<sp/>`bool`</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>image<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>already<sp/>trimmed.</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TODO<sp/>:<sp/>DM-15409<sp/>will<sp/>resolve<sp/>this.</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>:<sp/>`<ref refid="classlsst_1_1afw_1_1image_1_1_image" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.image.Image</ref>`</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Image<sp/>of<sp/>the<sp/>amplifier<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>desired<sp/>configuration.</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="415"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X_FLIP<sp/>=<sp/>{lsst.afw.cameraGeom.ReadoutCorner.LL:<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsst.afw.cameraGeom.ReadoutCorner.LR:<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsst.afw.cameraGeom.ReadoutCorner.UL:<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsst.afw.cameraGeom.ReadoutCorner.UR:<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y_FLIP<sp/>=<sp/>{lsst.afw.cameraGeom.ReadoutCorner.LL:<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsst.afw.cameraGeom.ReadoutCorner.LR:<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsst.afw.cameraGeom.ReadoutCorner.UL:<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsst.afw.cameraGeom.ReadoutCorner.UR:<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/>image[amp.getBBox()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isTrimmed<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>amp.getRawDataBBox()]</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisAmpCorner<sp/>=<sp/>amp.getReadoutCorner()</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetAmpCorner<sp/>=<sp/>ampTarget.getReadoutCorner()</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Flipping<sp/>is<sp/>necessary<sp/>only<sp/>if<sp/>the<sp/>desired<sp/>configuration<sp/>doesn&apos;t<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>what<sp/>we<sp/>currently<sp/>have.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xFlip<sp/>=<sp/>X_FLIP[targetAmpCorner]<sp/>^<sp/>X_FLIP[thisAmpCorner]</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yFlip<sp/>=<sp/>Y_FLIP[targetAmpCorner]<sp/>^<sp/>Y_FLIP[thisAmpCorner]</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacelsst_1_1afw_1_1math_1aa21b00d7f4b37a1478a06551971cf5a4" kindref="member" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.math.flipImage</ref>(output,<sp/>xFlip,<sp/>yFlip)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@staticmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a48d6c1dd3b43a16ba1f9f106754ec334" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a48d6c1dd3b43a16ba1f9f106754ec334" kindref="member">calculateBackground</ref>(mi,<sp/>badPixels=[&quot;BAD&quot;]):</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Estimate<sp/>median<sp/>background<sp/>in<sp/>image.</highlight></codeline>
<codeline lineno="437"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="438"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Getting<sp/>a<sp/>great<sp/>background<sp/>model<sp/>isn&apos;t<sp/>important<sp/>for<sp/>crosstalk</highlight></codeline>
<codeline lineno="439"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correction,<sp/>since<sp/>the<sp/>crosstalk<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>at<sp/>a<sp/>low<sp/>level.<sp/>The<sp/>median<sp/>should</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>sufficient.</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mi<sp/>:<sp/>`<ref refid="classlsst_1_1afw_1_1image_1_1_masked_image" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.image.MaskedImage</ref>`</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskedImage<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>which<sp/>to<sp/>measure<sp/>background.</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>badPixels<sp/>:<sp/>`list`<sp/>of<sp/>`str`</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mask<sp/>planes<sp/>to<sp/>ignore.</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bg<sp/>:<sp/>`float`</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Median<sp/>background<sp/>level.</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>mi.getMask()</highlight></codeline>
<codeline lineno="454"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats<sp/>=<sp/><ref refid="classlsst_1_1afw_1_1math_1_1_statistics_control" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.math.StatisticsControl</ref>()</highlight></codeline>
<codeline lineno="455"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats.setAndMask(mask.getPlaneBitMask(badPixels))</highlight></codeline>
<codeline lineno="456"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacelsst_1_1afw_1_1math_1a5370f6cd145f81654cdff1655bce4470" kindref="member" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.math.makeStatistics</ref>(mi,<sp/>lsst.afw.math.MEDIAN,<sp/>stats).getValue()</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a96e3e4148b1025d2a72b512d4a59b851" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a96e3e4148b1025d2a72b512d4a59b851" kindref="member">subtractCrosstalk</ref>(self,<sp/>thisExposure,<sp/>sourceExposure=None,<sp/>crosstalkCoeffs=None,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>badPixels=[&quot;BAD&quot;],<sp/>minPixelToMask=45000,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalkStr=&quot;CROSSTALK&quot;,<sp/>isTrimmed=False,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundMethod=&quot;None&quot;):</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Subtract<sp/>the<sp/>crosstalk<sp/>from<sp/>thisExposure,<sp/>optionally<sp/>using<sp/>a</highlight></codeline>
<codeline lineno="463"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>different<sp/>source.</highlight></codeline>
<codeline lineno="464"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="465"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>We<sp/>set<sp/>the<sp/>mask<sp/>plane<sp/>indicated<sp/>by<sp/>``crosstalkStr``<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>a<sp/>target</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amplifier<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pixels<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>a<sp/>source<sp/>amplifier<sp/>that<sp/>exceed</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``minPixelToMask``.<sp/>Note<sp/>that<sp/>the<sp/>correction<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>applied<sp/>to<sp/>all<sp/>pixels</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>amplifier,<sp/>but<sp/>only<sp/>those<sp/>that<sp/>have<sp/>a<sp/>substantial<sp/>crosstalk</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>are<sp/>masked<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>``crosstalkStr``.</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>uncorrected<sp/>image<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>used<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>a<sp/>template<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>correction.<sp/>This<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good<sp/>enough<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>crosstalk<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>small<sp/>(e.g.,<sp/>coefficients<sp/>&lt;<sp/>~<sp/>1e-3),</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>it</highlight><highlight class="stringliteral">&apos;s<sp/>larger<sp/>you<sp/>may<sp/>want<sp/>to<sp/>iterate.</highlight></codeline>
<codeline lineno="474"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="475"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="476"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="477"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisExposure<sp/>:<sp/>`<ref refid="classlsst_1_1afw_1_1image_1_1_exposure" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.image.Exposure</ref>`</highlight></codeline>
<codeline lineno="478"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exposure<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>which<sp/>to<sp/>subtract<sp/>crosstalk.</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceExposure<sp/>:<sp/>`<ref refid="classlsst_1_1afw_1_1image_1_1_exposure" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.image.Exposure</ref>`,<sp/>optional</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exposure<sp/>to<sp/>use<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>the<sp/>source<sp/>of<sp/>the<sp/>crosstalk.<sp/><sp/>If<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>set,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisExposure<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>used<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>the<sp/>source<sp/>(intra-detector<sp/>crosstalk).</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalkCoeffs<sp/>:<sp/>`numpy.ndarray`,<sp/>optional.</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Coefficients<sp/>to<sp/>use<sp/>to<sp/>correct<sp/>crosstalk.</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>badPixels<sp/>:<sp/>`list`<sp/>of<sp/>`str`</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mask<sp/>planes<sp/>to<sp/>ignore.</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minPixelToMask<sp/>:<sp/>`float`</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Minimum<sp/>pixel<sp/>value<sp/>(relative<sp/>to<sp/>the<sp/>background<sp/>level)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/>amplifier<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>which<sp/>to<sp/>set<sp/>``crosstalkStr``<sp/>mask<sp/>plane</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>target<sp/>amplifier.</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalkStr<sp/>:<sp/>`str`</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mask<sp/>plane<sp/>name<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pixels<sp/>greatly<sp/>modified<sp/>by<sp/>crosstalk</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(above<sp/>minPixelToMask).</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isTrimmed<sp/>:<sp/>`bool`</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>image<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>already<sp/>trimmed.</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>should<sp/>no<sp/>longer<sp/>be<sp/>needed<sp/>once<sp/>DM-15409<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>resolved.</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundMethod<sp/>:<sp/>`str`</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>used<sp/>to<sp/>subtract<sp/>the<sp/>background.<sp/><sp/></highlight><highlight class="stringliteral">&quot;AMP&quot;</highlight><highlight class="normal"><sp/>uses</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amplifier-by-amplifier<sp/>background<sp/>levels,<sp/></highlight><highlight class="stringliteral">&quot;DETECTOR&quot;</highlight><highlight class="normal"><sp/>uses<sp/>full</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exposure/maskedImage<sp/>levels.<sp/><sp/>Any<sp/>other<sp/>value<sp/>results<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>no</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>background<sp/>subtraction.</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="502"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mi<sp/>=<sp/>thisExposure.getMaskedImage()</highlight></codeline>
<codeline lineno="503"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>mi.getMask()</highlight></codeline>
<codeline lineno="504"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector<sp/>=<sp/>thisExposure.getDetector()</highlight></codeline>
<codeline lineno="505"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a1162712e4ad1f9b4ead2e096bd57252b" kindref="member">hasCrosstalk</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1aa4a68997772b1898843219a8d078e228" kindref="member">fromDetector</ref><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a89ab82e7112c51558cab8822723684a9" kindref="member">fromDetector</ref>(detector,<sp/>coeffVector=crosstalkCoeffs)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numAmps<sp/>=<sp/>len(detector)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>numAmps<sp/>!=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a3ca7dd4d599b1d17161c8dc8d68dc03e" kindref="member">nAmp</ref>:</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(f</highlight><highlight class="stringliteral">&quot;Crosstalk<sp/>built<sp/>for<sp/>{self.nAmp}<sp/>in<sp/>{self._detectorName},<sp/>received<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;{numAmps}<sp/>in<sp/>{detector.getName()}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sourceExposure:</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/>=<sp/>sourceExposure.getMaskedImage()</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceDetector<sp/>=<sp/>sourceExposure.getDetector()</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/>=<sp/>mi</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceDetector<sp/>=<sp/>detector</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>crosstalkCoeffs<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeffs<sp/>=<sp/>crosstalkCoeffs</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeffs<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a70896522a8c70f9b527062436238cc05" kindref="member">coeffs</ref></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a1a64908430e0e0c48dde22a7b41d8bc2" kindref="member">log</ref>.debug(</highlight><highlight class="stringliteral">&quot;CT<sp/>COEFF:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>coeffs)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>background<sp/>level<sp/>based<sp/>on<sp/>the<sp/>requested<sp/>method.<sp/><sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>thresholdBackground<sp/>holds<sp/>the<sp/>offset<sp/>needed<sp/>so<sp/>that<sp/>we<sp/>only<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pixels<sp/>high<sp/>relative<sp/>to<sp/>the<sp/>background,<sp/>not<sp/>in<sp/>an<sp/>absolute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sense.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thresholdBackground<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a48d6c1dd3b43a16ba1f9f106754ec334" kindref="member">calculateBackground</ref>(source,<sp/>badPixels)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgrounds<sp/>=<sp/>[0.0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sourceDetector]</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>backgroundMethod<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>backgroundMethod<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;AMP&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgrounds<sp/>=<sp/>[self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a48d6c1dd3b43a16ba1f9f106754ec334" kindref="member">calculateBackground</ref>(source[amp.getBBox()],<sp/>badPixels)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sourceDetector]</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>backgroundMethod<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DETECTOR&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgrounds<sp/>=<sp/>[self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1a48d6c1dd3b43a16ba1f9f106754ec334" kindref="member">calculateBackground</ref>(source,<sp/>badPixels)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>amp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sourceDetector]</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>the<sp/>crosstalkStr<sp/>bit<sp/>for<sp/>the<sp/>bright<sp/>pixels<sp/>(those<sp/>which<sp/>will<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>significant<sp/>crosstalk<sp/>correction)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalkPlane<sp/>=<sp/>mask.addMaskPlane(crosstalkStr)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>footprints<sp/>=<sp/><ref refid="classlsst_1_1afw_1_1detection_1_1_footprint_set" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.detection.FootprintSet</ref>(source,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlsst_1_1afw_1_1detection_1_1_threshold" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.detection.Threshold</ref>(minPixelToMask</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>thresholdBackground))</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>footprints.setMask(mask,<sp/>crosstalkStr)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalk<sp/>=<sp/>mask.getPlaneBitMask(crosstalkStr)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>a<sp/>subtrahend<sp/>image<sp/>to<sp/>contain<sp/>all<sp/>the<sp/>scaled<sp/>crosstalk<sp/>signals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtrahend<sp/>=<sp/>source.Factory(source.getBBox())</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtrahend.set((0,<sp/>0,<sp/>0))</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeffs<sp/>=<sp/>coeffs.transpose()</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ii,<sp/>iAmp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(sourceDetector):</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iImage<sp/>=<sp/>subtrahend[iAmp.getBBox()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isTrimmed<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>iAmp.getRawDataBBox()]</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>jj,<sp/>jAmp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(detector):</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>coeffs[ii,<sp/>jj]<sp/>==<sp/>0.0:</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jImage<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib_1aba597ab21cbe83370dbd2ce567ce1924" kindref="member">extractAmp</ref>(mi,<sp/>jAmp,<sp/>iAmp,<sp/>isTrimmed)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jImage.getMask().getArray()[:]<sp/>&amp;=<sp/>crosstalk<sp/><sp/></highlight><highlight class="comment">#<sp/>Remove<sp/>all<sp/>other<sp/>masks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jImage<sp/>-=<sp/>backgrounds[jj]</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iImage.scaledPlus(coeffs[ii,<sp/>jj],<sp/>jImage)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>crosstalkStr<sp/>bit<sp/>only<sp/>for<sp/>those<sp/>pixels<sp/>that<sp/>have<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>significantly<sp/>modified<sp/>(i.e.,<sp/>those<sp/>masked<sp/>as<sp/>such<sp/>in<sp/>&apos;subtrahend&apos;),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>not<sp/>necessarily<sp/>those<sp/>that<sp/>are<sp/>bright<sp/>originally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask.clearMaskPlane(crosstalkPlane)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mi<sp/>-=<sp/>subtrahend<sp/><sp/></highlight><highlight class="comment">#<sp/>also<sp/>sets<sp/>crosstalkStr<sp/>bit<sp/>for<sp/>bright<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config" kindref="compound">CrosstalkConfig</ref>(Config):</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Configuration<sp/>for<sp/>intra-detector<sp/>crosstalk<sp/>removal.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1a95568d4f99f5aaa4d8a2328d3aff9e36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>minPixelToMask<sp/>=<sp/>Field(</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=float,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Set<sp/>crosstalk<sp/>mask<sp/>plane<sp/>for<sp/>pixels<sp/>over<sp/>this<sp/>value.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=45000</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="578" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1a04235240917f9a39d99f71c9343e93e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>crosstalkMaskPlane<sp/>=<sp/>Field(</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=str,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Name<sp/>for<sp/>crosstalk<sp/>mask<sp/>plane.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="stringliteral">&quot;CROSSTALK&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="583" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1af5076b292124ee5c2513a5bef75975df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>crosstalkBackgroundMethod<sp/>=<sp/>ChoiceField(</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=str,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Type<sp/>of<sp/>background<sp/>subtraction<sp/>to<sp/>use<sp/>when<sp/>applying<sp/>correction.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowed={</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>no<sp/>background<sp/>subtraction.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;AMP&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;Subtract<sp/>amplifier-by-amplifier<sp/>background<sp/>levels.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DETECTOR&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;Subtract<sp/>detector<sp/>level<sp/>background.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="593" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1a70ec1c68795ce524da165ada70b661af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>useConfigCoefficients<sp/>=<sp/>Field(</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=bool,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Ignore<sp/>the<sp/>detector<sp/>crosstalk<sp/>information<sp/>in<sp/>favor<sp/>of<sp/>CrosstalkConfig<sp/>values?&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="598" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1a84190419987d428c521b7e0ccfc9058a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>crosstalkValues<sp/>=<sp/>ListField(</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=float,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=(</highlight><highlight class="stringliteral">&quot;Amplifier-indexed<sp/>crosstalk<sp/>coefficients<sp/>to<sp/>use.<sp/><sp/>This<sp/>should<sp/>be<sp/>arranged<sp/>as<sp/>a<sp/>1<sp/>x<sp/>nAmp**2<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;list<sp/>of<sp/>coefficients,<sp/>such<sp/>that<sp/>when<sp/>reshaped<sp/>by<sp/>crosstalkShape,<sp/>the<sp/>result<sp/>is<sp/>nAmp<sp/>x<sp/>nAmp.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>matrix<sp/>should<sp/>be<sp/>structured<sp/>so<sp/>CT<sp/>*<sp/>[amp0<sp/>amp1<sp/>amp2<sp/>...]^T<sp/>returns<sp/>the<sp/>column<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vector<sp/>[corr0<sp/>corr1<sp/>corr2<sp/>...]^T.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=[0.0],</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="606" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1ae73e928626cab8a32075c4e2042d8b3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>crosstalkShape<sp/>=<sp/>ListField(</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=int,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc=</highlight><highlight class="stringliteral">&quot;Shape<sp/>of<sp/>the<sp/>coefficient<sp/>array.<sp/><sp/>This<sp/>should<sp/>be<sp/>equal<sp/>to<sp/>[nAmp,<sp/>nAmp].&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=[1],</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1a45b1ce9e883a7a852570342071a9be03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1a45b1ce9e883a7a852570342071a9be03" kindref="member">getCrosstalk</ref>(self,<sp/>detector=None):</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Return<sp/>a<sp/>2-D<sp/>numpy<sp/>array<sp/>of<sp/>crosstalk<sp/>coefficients<sp/>in<sp/>the<sp/>proper</highlight></codeline>
<codeline lineno="614"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape.</highlight></codeline>
<codeline lineno="615"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="616"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="617"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="618"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector<sp/>:<sp/>`lsst.afw.cameraGeom.detector`</highlight></codeline>
<codeline lineno="619"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Detector<sp/>that<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>to<sp/>be<sp/>crosstalk<sp/>corrected.</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeffs<sp/>:<sp/>`numpy.ndarray`</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Crosstalk<sp/>coefficients<sp/>that<sp/>can<sp/>be<sp/>used<sp/>to<sp/>correct<sp/>the<sp/>detector.</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>------</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RuntimeError</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raised<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>no<sp/>coefficients<sp/>could<sp/>be<sp/>generated<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>this</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector/configuration.</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="632"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1a70ec1c68795ce524da165ada70b661af" kindref="member">useConfigCoefficients</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeffs<sp/>=<sp/>np.array(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1a84190419987d428c521b7e0ccfc9058a" kindref="member">crosstalkValues</ref>).reshape(self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1ae73e928626cab8a32075c4e2042d8b3c" kindref="member">crosstalkShape</ref>)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>detector<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nAmp<sp/>=<sp/>len(detector)</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>coeffs.shape<sp/>!=<sp/>(nAmp,<sp/>nAmp):</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;Constructed<sp/>crosstalk<sp/>coeffients<sp/>do<sp/>not<sp/>match<sp/>detector<sp/>shape.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;{coeffs.shape}<sp/>{nAmp}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coeffs</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>detector<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>detector.hasCrosstalk()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Assume<sp/>the<sp/>detector<sp/>defines<sp/>itself<sp/>consistently.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detector.getCrosstalk()</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>correct<sp/>crosstalk<sp/>without<sp/>crosstalk<sp/>coefficients&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1a42d1d75f31677854834757262d0c53f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1a42d1d75f31677854834757262d0c53f3" kindref="member">hasCrosstalk</ref>(self,<sp/>detector=None):</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Return<sp/>a<sp/>boolean<sp/>indicating<sp/>if<sp/>crosstalk<sp/>coefficients<sp/>exist.</highlight></codeline>
<codeline lineno="648"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="649"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="650"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="651"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector<sp/>:<sp/>`lsst.afw.cameraGeom.detector`</highlight></codeline>
<codeline lineno="652"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Detector<sp/>that<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>to<sp/>be<sp/>crosstalk<sp/>corrected.</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasCrosstalk<sp/>:<sp/>`bool`</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>this<sp/>detector/configuration<sp/>has<sp/>crosstalk<sp/>coefficients</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined.</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="660"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1a70ec1c68795ce524da165ada70b661af" kindref="member">useConfigCoefficients</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_config_1a84190419987d428c521b7e0ccfc9058a" kindref="member">crosstalkValues</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>detector<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>detector.hasCrosstalk()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_task" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_task" kindref="compound">CrosstalkTask</ref>(Task):</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Apply<sp/>intra-detector<sp/>crosstalk<sp/>correction.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_task_1a76c2148ada73ee7ea63596f21f25f91b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ConfigClass<sp/>=<sp/>CrosstalkConfig</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>_DefaultName<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;isrCrosstalk&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_task_1a857118acbd84fe5f07271289ec08a07f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_task_1a857118acbd84fe5f07271289ec08a07f" kindref="member">run</ref>(self,<sp/>exposure,<sp/>crosstalk=None,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalkSources=None,<sp/>isTrimmed=False,<sp/>camera=None):</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Apply<sp/>intra-detector<sp/>crosstalk<sp/>correction</highlight></codeline>
<codeline lineno="676"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="677"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="678"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="679"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exposure<sp/>:<sp/>`<ref refid="classlsst_1_1afw_1_1image_1_1_exposure" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.image.Exposure</ref>`</highlight></codeline>
<codeline lineno="680"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exposure<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>which<sp/>to<sp/>remove<sp/>crosstalk.</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalkCalib<sp/>:<sp/>`<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib" kindref="compound">lsst.ip.isr.CrosstalkCalib</ref>`,<sp/>optional</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>External<sp/>crosstalk<sp/>calibration<sp/>to<sp/>apply.<sp/><sp/>Constructed<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detector<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>found.</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalkSources<sp/>:<sp/>`defaultdict`,<sp/>optional</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Image<sp/>data<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>other<sp/>detectors<sp/>that<sp/>are<sp/>sources<sp/>of</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalk<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>exposure.<sp/><sp/>The<sp/>keys<sp/>are<sp/>expected<sp/>to<sp/>be<sp/>names</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>other<sp/>detectors,<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>values<sp/>containing</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`<ref refid="classlsst_1_1afw_1_1image_1_1_exposure" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.image.Exposure</ref>`<sp/>at<sp/>the<sp/>same<sp/>level<sp/>of<sp/>processing</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>``exposure``.</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>default<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>intra-detector<sp/>crosstalk<sp/>here<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isTrimmed<sp/>:<sp/>`bool`,<sp/>optional</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>image<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>already<sp/>trimmed.</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>should<sp/>no<sp/>longer<sp/>be<sp/>needed<sp/>once<sp/>DM-15409<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>resolved.</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera<sp/>:<sp/>`<ref refid="classlsst_1_1afw_1_1camera_geom_1_1_camera" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.cameraGeom.Camera</ref>`,<sp/>optional</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Camera<sp/>associated<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>this<sp/>exposure.<sp/><sp/>Only<sp/>used<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inter-chip<sp/>matching.</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>------</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RuntimeError</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raised<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>called<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/>detector<sp/>that<sp/>does<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>have<sp/>a</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalk<sp/>correction.<sp/><sp/>Also<sp/>raised<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>crosstalkSource</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>an<sp/>expected<sp/>type.</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="705"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>crosstalk:</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalk<sp/>=<sp/><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_calib" kindref="compound">CrosstalkCalib</ref>(log=self.log)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalk<sp/>=<sp/>crosstalk.fromDetector(exposure.getDetector(),</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeffVector=self.config.crosstalkValues)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>crosstalk.log:</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalk.log<sp/>=<sp/>self.log</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>crosstalk.hasCrosstalk:</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>correct<sp/>crosstalk<sp/>without<sp/>crosstalk<sp/>coefficients.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.info(</highlight><highlight class="stringliteral">&quot;Applying<sp/>crosstalk<sp/>correction.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalk.subtractCrosstalk(exposure,<sp/>crosstalkCoeffs=crosstalk.coeffs,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minPixelToMask=self.config.minPixelToMask,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalkStr=self.config.crosstalkMaskPlane,<sp/>isTrimmed=isTrimmed,</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundMethod=self.config.crosstalkBackgroundMethod)</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>crosstalk.interChip:</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>crosstalkSources:</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Parse<sp/>crosstalkSources:<sp/>Identify<sp/>which<sp/>detectors<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(crosstalkSources[0],<sp/><ref refid="classlsst_1_1afw_1_1image_1_1_exposure" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.image.Exposure</ref>):</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Received<sp/>afwImage.Exposure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceNames<sp/>=<sp/>[exp.getDetector().getName()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>exp<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>crosstalkSources]</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(crosstalkSources[0],<sp/>lsst.daf.butler.DeferredDatasetHandle):</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Received<sp/>dafButler.DeferredDatasetHandle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detectorList<sp/>=<sp/>[source.dataId[</highlight><highlight class="stringliteral">&apos;detector&apos;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>source<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>crosstalkSources]</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceNames<sp/>=<sp/>[camera[detector].getName()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>detector<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>detectorList]</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>object<sp/>passed<sp/>as<sp/>crosstalk<sp/>sources.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type(crosstalkSources[0]))</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>detName<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>crosstalk.interChip:</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>detName<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sourceNames:</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.warning(</highlight><highlight class="stringliteral">&quot;Crosstalk<sp/>lists<sp/>%s,<sp/>not<sp/>found<sp/>in<sp/>sources:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detName,<sp/>sourceNames)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>the<sp/>coefficients.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interChipCoeffs<sp/>=<sp/>crosstalk.interChip[detName]</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceExposure<sp/>=<sp/>crosstalkSources[sourceNames.index(detName)]</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(sourceExposure,<sp/>lsst.daf.butler.DeferredDatasetHandle):</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Dereference<sp/>the<sp/>dafButler.DeferredDatasetHandle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceExposure<sp/>=<sp/>sourceExposure.get()</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(sourceExposure,<sp/><ref refid="classlsst_1_1afw_1_1image_1_1_exposure" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/afw/g2c743f43ab+04f223c4f0/doc/afw.tag">lsst.afw.image.Exposure</ref>):</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>object<sp/>passed<sp/>as<sp/>crosstalk<sp/>sources.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type(sourceExposure))</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.info(</highlight><highlight class="stringliteral">&quot;Correcting<sp/>detector<sp/>%s<sp/>with<sp/>ctSource<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exposure.getDetector().getName(),</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceExposure.getDetector().getName())</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalk.subtractCrosstalk(exposure,<sp/>sourceExposure=sourceExposure,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalkCoeffs=interChipCoeffs,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minPixelToMask=self.config.minPixelToMask,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crosstalkStr=self.config.crosstalkMaskPlane,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isTrimmed=isTrimmed,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundMethod=self.config.crosstalkBackgroundMethod)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.warning(</highlight><highlight class="stringliteral">&quot;Crosstalk<sp/>contains<sp/>interChip<sp/>coefficients,<sp/>but<sp/>no<sp/>sources<sp/>found!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_null_crosstalk_task" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_null_crosstalk_task" kindref="compound">NullCrosstalkTask</ref>(<ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_crosstalk_task" kindref="compound">CrosstalkTask</ref>):</highlight></codeline>
<codeline lineno="766" refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_null_crosstalk_task_1abd770a1cf05e10a9e55952017ed8ecdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1crosstalk_1_1_null_crosstalk_task_1abd770a1cf05e10a9e55952017ed8ecdb" kindref="member">run</ref>(self,<sp/>exposure,<sp/>crosstalkSources=None):</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.log.info(</highlight><highlight class="stringliteral">&quot;Not<sp/>performing<sp/>any<sp/>crosstalk<sp/>correction&quot;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="python/lsst/ip/isr/crosstalk.py"/>
  </compounddef>
</doxygen>
