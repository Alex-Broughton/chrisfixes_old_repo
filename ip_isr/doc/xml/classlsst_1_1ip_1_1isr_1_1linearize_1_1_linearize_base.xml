<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_base" kind="class" language="Python" prot="public">
    <compoundname>lsst::ip::isr::linearize::LinearizeBase</compoundname>
    <basecompoundref prot="public" virt="non-virtual">metaclass</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">abc.ABCMeta</basecompoundref>
    <derivedcompoundref refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_lookup_table" prot="public" virt="non-virtual">lsst.ip.isr.linearize.LinearizeLookupTable</derivedcompoundref>
    <derivedcompoundref refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_none" prot="public" virt="non-virtual">lsst.ip.isr.linearize.LinearizeNone</derivedcompoundref>
    <derivedcompoundref refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_polynomial" prot="public" virt="non-virtual">lsst.ip.isr.linearize.LinearizePolynomial</derivedcompoundref>
    <derivedcompoundref refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_proportional" prot="public" virt="non-virtual">lsst.ip.isr.linearize.LinearizeProportional</derivedcompoundref>
    <derivedcompoundref refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_spline" prot="public" virt="non-virtual">lsst.ip.isr.linearize.LinearizeSpline</derivedcompoundref>
    <derivedcompoundref refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_squared" prot="public" virt="non-virtual">lsst.ip.isr.linearize.LinearizeSquared</derivedcompoundref>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_base_1afa9d483bd88e84ef109ede0984a10be7" prot="public" static="yes" mutable="no">
        <type></type>
        <definition>lsst::ip::isr.linearize.LinearizeBase::LinearityType</definition>
        <argsstring></argsstring>
        <name>LinearityType</name>
        <qualifiedname>lsst::ip::isr.linearize.LinearizeBase.LinearityType</qualifiedname>
        <initializer>=  None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/isr/linearize.py" line="510" column="1" bodyfile="python/lsst/ip/isr/linearize.py" bodystart="510" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_base_1a35a6c652513da5918c41f9b7ea91764d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def lsst.ip.isr.linearize.LinearizeBase.__call__</definition>
        <argsstring>(self, image, **kwargs)</argsstring>
        <name>__call__</name>
        <qualifiedname>lsst::ip::isr.linearize.LinearizeBase.__call__</qualifiedname>
        <reimplementedby refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_lookup_table_1a8656a54c7da82ae9ceebc9c1205bbf69">__call__</reimplementedby>
        <reimplementedby refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_polynomial_1a881b85adb25570ddbd5c5142856d3d31">__call__</reimplementedby>
        <reimplementedby refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_squared_1ab0bedf915bc9b2cfa2b62d88755452dd">__call__</reimplementedby>
        <reimplementedby refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_spline_1a9af66d7cf10ad3133ab37731eb706c9e">__call__</reimplementedby>
        <reimplementedby refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_proportional_1ad846b14dec12fd52510b4f132c1586ae">__call__</reimplementedby>
        <reimplementedby refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_none_1ab4354cc625be0b26bcd9877c2f37eeb8">__call__</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>image</type>
          <defname>image</defname>
        </param>
        <param>
          <type>**</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Correct non-linearity.

Parameters
----------
image : `lsst.afw.image.Image`
    Image to be corrected
kwargs : `dict`
    Dictionary of parameter keywords:

    ``coeffs``
        Coefficient vector (`list` or `numpy.array`).
    ``table``
        Lookup table data (`numpy.array`).
    ``log``
        Logger to handle messages (`logging.Logger`).

Returns
-------
output : `bool`
    If `True`, a correction was applied successfully.

Raises
------
RuntimeError:
    Raised if the linearity type listed in the
    detector does not match the class type.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/lsst/ip/isr/linearize.py" line="513" column="1" bodyfile="python/lsst/ip/isr/linearize.py" bodystart="513" bodyend="543"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Abstract base class functor for correcting non-linearity.

Subclasses must define ``__call__`` and set class variable
LinearityType to a string that will be used for linearity type in
the cameraGeom.Amplifier.linearityType field.

All linearity corrections should be defined in terms of an
additive correction, such that:

corrected_value = uncorrected_value + f(uncorrected_value)
</verbatim> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>abc::ABCMeta</label>
      </node>
      <node id="1">
        <label>lsst.ip.isr.linearize.LinearizeBase</label>
        <link refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>lsst.ip.isr.linearize.LinearizeLookupTable</label>
        <link refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_lookup_table"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>lsst.ip.isr.linearize.LinearizeNone</label>
        <link refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_none"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>lsst.ip.isr.linearize.LinearizePolynomial</label>
        <link refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_polynomial"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>lsst.ip.isr.linearize.LinearizeProportional</label>
        <link refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_proportional"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>lsst.ip.isr.linearize.LinearizeSpline</label>
        <link refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_spline"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>lsst.ip.isr.linearize.LinearizeSquared</label>
        <link refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_squared"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>metaclass</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>abc::ABCMeta</label>
      </node>
      <node id="1">
        <label>lsst.ip.isr.linearize.LinearizeBase</label>
        <link refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>metaclass</label>
      </node>
    </collaborationgraph>
    <location file="python/lsst/ip/isr/linearize.py" line="498" column="1" bodyfile="python/lsst/ip/isr/linearize.py" bodystart="498" bodyend="543"/>
    <listofallmembers>
      <member refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_base_1a35a6c652513da5918c41f9b7ea91764d" prot="public" virt="non-virtual"><scope>lsst::ip::isr::linearize::LinearizeBase</scope><name>__call__</name></member>
      <member refid="classlsst_1_1ip_1_1isr_1_1linearize_1_1_linearize_base_1afa9d483bd88e84ef109ede0984a10be7" prot="public" virt="non-virtual"><scope>lsst::ip::isr::linearize::LinearizeBase</scope><name>LinearityType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
