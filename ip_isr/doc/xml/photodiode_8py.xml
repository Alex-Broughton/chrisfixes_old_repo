<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="photodiode_8py" kind="file" language="Python">
    <compoundname>photodiode.py</compoundname>
    <innerclass refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib" prot="public">lsst::ip::isr::photodiode::PhotodiodeCalib</innerclass>
    <innernamespace refid="namespacelsst">lsst</innernamespace>
    <innernamespace refid="namespacelsst_1_1ip">lsst::ip</innernamespace>
    <innernamespace refid="namespacelsst_1_1ip_1_1isr">lsst::ip::isr</innernamespace>
    <innernamespace refid="namespacelsst_1_1ip_1_1isr_1_1photodiode">lsst::ip::isr::photodiode</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacelsst_1_1ip_1_1isr_1_1photodiode" refkind="compound"><highlight class="comment">#<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>ip_isr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Developed<sp/>for<sp/>the<sp/>LSST<sp/>Data<sp/>Management<sp/>System.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>product<sp/>includes<sp/>software<sp/>developed<sp/>by<sp/>the<sp/>LSST<sp/>Project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(https://www.lsst.org).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>the<sp/>COPYRIGHT<sp/>file<sp/>at<sp/>the<sp/>top-level<sp/>directory<sp/>of<sp/>this<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>for<sp/>details<sp/>of<sp/>code<sp/>ownership.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">#<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;https://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">Photodiode<sp/>storage<sp/>class.</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">__all__<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;PhotodiodeCalib&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>astropy.table<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Table</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacelsst_1_1ip_1_1isr" kindref="compound">lsst.ip.isr</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>IsrCalib</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib" kindref="compound">PhotodiodeCalib</ref>(<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib" kindref="compound">IsrCalib</ref>):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Independent<sp/>current<sp/>measurements<sp/>from<sp/>photodiode<sp/>for<sp/>linearity</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>calculations.</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>timeSamples<sp/>:<sp/>`list`<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>`numpy.ndarray`</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List<sp/>of<sp/>samples<sp/>the<sp/>photodiode<sp/>was<sp/>measured<sp/>at.</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>currentSamples<sp/>:<sp/>`list`<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>`numpy.ndarray`</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List<sp/>of<sp/>current<sp/>measurements<sp/>at<sp/>each<sp/>time<sp/>sample.</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>log<sp/>:<sp/>`<ref refid="classlsst_1_1log_1_1Log" kindref="compound" external="/sdf/group/rubin/sw/conda/envs/lsst-scipipe-6.0.0/share/eups/Linux64/log/g8479130295+37bc81c514/doc/log.tag">lsst.log.Log</ref>`,<sp/>optional</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log<sp/>to<sp/>write<sp/>messages<sp/>to.</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>**kwargs<sp/>:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Additional<sp/>parameters.<sp/>These<sp/>will<sp/>be<sp/>passed<sp/>to<sp/>the<sp/>parent</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constructor<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>exception<sp/>of:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``</highlight><highlight class="stringliteral">&quot;integrationMethod&quot;</highlight><highlight class="normal">``</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Name<sp/>of<sp/>the<sp/>algorithm<sp/>to<sp/>use<sp/>to<sp/>integrate<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples.<sp/>Allowed<sp/>values<sp/>are<sp/>``DIRECT_SUM``,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``TRIMMED_SUM``,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>``CHARGE_SUM``<sp/>(`str`).</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``</highlight><highlight class="stringliteral">&quot;currentScale&quot;</highlight><highlight class="normal">``</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Scale<sp/>factor<sp/>to<sp/>apply<sp/>to<sp/>the<sp/>current<sp/>samples<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``CHARGE_SUM``<sp/>integration<sp/>method.<sp/>A<sp/>typical<sp/>value</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>would<sp/>be<sp/>`-1`,<sp/>to<sp/>flip<sp/>the<sp/>sign<sp/>of<sp/>the<sp/>integrated<sp/>charge.</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>_OBSTYPE<sp/>=<sp/>&apos;PHOTODIODE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>_SCHEMA<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;Photodiode&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>_VERSION<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ac3668eaaaacf5dcbbf33597dfe6e64f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ac3668eaaaacf5dcbbf33597dfe6e64f7" kindref="member">__init__</ref>(self,<sp/>timeSamples=None,<sp/>currentSamples=None,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>timeSamples<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>currentSamples<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(timeSamples)<sp/>!=<sp/>len(currentSamples):</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(f</highlight><highlight class="stringliteral">&quot;Inconsitent<sp/>vector<sp/>lengths:<sp/>{len(timeSamples)}<sp/>vs<sp/>{len(currentSamples)}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ae48d220b2e70470d27731ccaa50b5ba5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ae48d220b2e70470d27731ccaa50b5ba5" kindref="member">timeSamples</ref><sp/>=<sp/>np.array(timeSamples).ravel()</highlight></codeline>
<codeline lineno="69" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1afb29cb1b1f4b6da8a9f90d4cfa67babc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1afb29cb1b1f4b6da8a9f90d4cfa67babc" kindref="member">currentSamples</ref><sp/>=<sp/>np.array(currentSamples).ravel()</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ae48d220b2e70470d27731ccaa50b5ba5" kindref="member">timeSamples</ref><sp/>=<sp/>np.array([]).ravel()</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1afb29cb1b1f4b6da8a9f90d4cfa67babc" kindref="member">currentSamples</ref><sp/>=<sp/>np.array([]).ravel()</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ac3668eaaaacf5dcbbf33597dfe6e64f7" kindref="member">__init__</ref>(**kwargs)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;integrationMethod&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="77" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a88c226f345c18d6e74872cc228b37793" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a88c226f345c18d6e74872cc228b37793" kindref="member">integrationMethod</ref><sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&apos;integrationMethod&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a88c226f345c18d6e74872cc228b37793" kindref="member">integrationMethod</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;DIRECT_SUM&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;currentScale&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="82" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a6dd06fa6af4e6e0316881369c750db19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a6dd06fa6af4e6e0316881369c750db19" kindref="member">currentScale</ref><sp/>=<sp/>kwargs.pop(</highlight><highlight class="stringliteral">&apos;currentScale&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a6dd06fa6af4e6e0316881369c750db19" kindref="member">currentScale</ref><sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;day_obs&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a800537ed1777875f9f9fd973a83c3809" kindref="member">updateMetadata</ref>(day_obs=kwargs[</highlight><highlight class="stringliteral">&apos;day_obs&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;seq_num&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kwargs:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a800537ed1777875f9f9fd973a83c3809" kindref="member">updateMetadata</ref>(seq_num=kwargs[</highlight><highlight class="stringliteral">&apos;seq_num&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1ad3476abba40729c58801cd853baa64f7" kindref="member">requiredAttributes</ref><ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1aafa57ec8ed72627506866d39e7903637" kindref="member">requiredAttributes</ref><ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a3bd634ef75e3710c93d50f7c1829961f" kindref="member">requiredAttributes</ref>.update([</highlight><highlight class="stringliteral">&apos;timeSamples&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;currentSamples&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;integrationMethod&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a9c50aa1a317bbfb2bef5cf275b36ec03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a9c50aa1a317bbfb2bef5cf275b36ec03" kindref="member">fromDict</ref>(cls,<sp/>dictionary):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Construct<sp/>a<sp/>PhotodiodeCalib<sp/>from<sp/>a<sp/>dictionary<sp/>of<sp/>properties.</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary<sp/>:<sp/>`dict`</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>of<sp/>properties.</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>:<sp/>`<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib" kindref="compound">lsst.ip.isr.PhotodiodeCalib</ref>`</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constructed<sp/>photodiode<sp/>data.</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>------</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RuntimeError</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raised<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>supplied<sp/>dictionary<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/>different</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibration<sp/>type.</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>=<sp/>cls()</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>calib._OBSTYPE<sp/>!=<sp/>dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&apos;OBSTYPE&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(f</highlight><highlight class="stringliteral">&quot;Incorrect<sp/>photodiode<sp/>supplied.<sp/><sp/>Expected<sp/>{calib._OBSTYPE},<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;found<sp/>{dictionary[&apos;metadata&apos;][&apos;OBSTYPE&apos;]}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.setMetadata(dictionary[</highlight><highlight class="stringliteral">&apos;metadata&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.timeSamples<sp/>=<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;timeSamples&apos;</highlight><highlight class="normal">]).ravel()</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.currentSamples<sp/>=<sp/>np.array(dictionary[</highlight><highlight class="stringliteral">&apos;currentSamples&apos;</highlight><highlight class="normal">]).ravel()</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.integrationMethod<sp/>=<sp/>dictionary.get(</highlight><highlight class="stringliteral">&apos;integrationMethod&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DIRECT_SUM&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib.updateMetadata()</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calib</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ae414d0126d5bdce22d7e638d3f3898d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ae414d0126d5bdce22d7e638d3f3898d2" kindref="member">toDict</ref>(self):</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Return<sp/>a<sp/>dictionary<sp/>containing<sp/>the<sp/>photodiode<sp/>properties.</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>dictionary<sp/>should<sp/>be<sp/>able<sp/>to<sp/>be<sp/>round-tripped<sp/>through.</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`fromDict`.</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary<sp/>:<sp/>`dict`</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>of<sp/>properties.</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a800537ed1777875f9f9fd973a83c3809" kindref="member">updateMetadata</ref>()</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[&apos;metadata&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a5aa43aac89d3efd55adb897b148fddc0" kindref="member">getMetadata</ref>()</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;timeSamples&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ae48d220b2e70470d27731ccaa50b5ba5" kindref="member">timeSamples</ref>.tolist()</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;currentSamples&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1afb29cb1b1f4b6da8a9f90d4cfa67babc" kindref="member">currentSamples</ref>.tolist()</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDict[</highlight><highlight class="stringliteral">&apos;integrationMethod&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a88c226f345c18d6e74872cc228b37793" kindref="member">integrationMethod</ref></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outDict</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a132bfd6ce138a20d08c3f443dfcdb4c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a132bfd6ce138a20d08c3f443dfcdb4c9" kindref="member">fromTable</ref>(cls,<sp/>tableList):</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Construct<sp/>calibration<sp/>from<sp/>a<sp/>list<sp/>of<sp/>tables.</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>uses<sp/>the<sp/>`fromDict`<sp/>method<sp/>to<sp/>create<sp/>the</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibration<sp/>after<sp/>constructing<sp/>an<sp/>appropriate<sp/>dictionary<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>input<sp/>tables.</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableList<sp/>:<sp/>`list`<sp/>[`astropy.table.Table`]</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List<sp/>of<sp/>tables<sp/>to<sp/>use<sp/>to<sp/>construct<sp/>the<sp/>crosstalk</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibration.</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>:<sp/>`<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib" kindref="compound">lsst.ip.isr.PhotodiodeCalib</ref>`</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>calibration<sp/>defined<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>tables.</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataTable<sp/>=<sp/>tableList[0]</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata<sp/>=<sp/>dataTable.meta</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[&apos;metadata&apos;</highlight><highlight class="normal">]<sp/>=<sp/>metadata</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;integrationMethod&apos;</highlight><highlight class="normal">]<sp/>=<sp/>metadata.pop(</highlight><highlight class="stringliteral">&apos;INTEGRATION_METHOD&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;DIRECT_SUM&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;timeSamples&apos;</highlight><highlight class="normal">]<sp/>=<sp/>dataTable[</highlight><highlight class="stringliteral">&apos;TIME&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inDict[</highlight><highlight class="stringliteral">&apos;currentSamples&apos;</highlight><highlight class="normal">]<sp/>=<sp/>dataTable[</highlight><highlight class="stringliteral">&apos;CURRENT&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cls().<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a9c50aa1a317bbfb2bef5cf275b36ec03" kindref="member">fromDict</ref>(inDict)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a9780cf01710c2538455424d1d153f166" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a9780cf01710c2538455424d1d153f166" kindref="member">toTable</ref>(self):</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Construct<sp/>a<sp/>list<sp/>of<sp/>tables<sp/>containing<sp/>the<sp/>information<sp/>in<sp/>this</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calibration.</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>list<sp/>of<sp/>tables<sp/>should<sp/>create<sp/>an<sp/>identical<sp/>calibration</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after<sp/>being<sp/>passed<sp/>to<sp/>this<sp/></highlight><highlight class="keyword">class</highlight><highlight class="stringliteral">&apos;s<sp/>fromTable<sp/>method.</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableList<sp/>:<sp/>`list`<sp/>[`astropy.table.Table`]</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List<sp/>of<sp/>tables<sp/>containing<sp/>the<sp/>photodiode<sp/>calibration</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>information.</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a800537ed1777875f9f9fd973a83c3809" kindref="member">updateMetadata</ref>()</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catalog<sp/>=<sp/>Table([{&apos;TIME&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ae48d220b2e70470d27731ccaa50b5ba5" kindref="member">timeSamples</ref>,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;CURRENT&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1afb29cb1b1f4b6da8a9f90d4cfa67babc" kindref="member">currentSamples</ref>}])</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inMeta<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1calib_type_1_1_isr_calib_1a5aa43aac89d3efd55adb897b148fddc0" kindref="member">getMetadata</ref>().<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ae414d0126d5bdce22d7e638d3f3898d2" kindref="member">toDict</ref>()</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outMeta<sp/>=<sp/>{k:<sp/>v<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inMeta.items()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>v<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outMeta.update({k:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inMeta.items()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>v<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outMeta[</highlight><highlight class="stringliteral">&apos;INTEGRATION_METHOD&apos;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a88c226f345c18d6e74872cc228b37793" kindref="member">integrationMethod</ref></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catalog.meta<sp/>=<sp/>outMeta</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return([catalog])</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1af6d30bb106c105d104df74346e97c799" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1af6d30bb106c105d104df74346e97c799" kindref="member">readTwoColumnPhotodiodeData</ref>(cls,<sp/>filename):</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Construct<sp/>a<sp/>PhotodiodeCalib<sp/>by<sp/>reading<sp/>the<sp/>simple<sp/>column<sp/>format.</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/>:<sp/>`str`</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>File<sp/>to<sp/>read<sp/>samples<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib<sp/>:<sp/>`<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib" kindref="compound">lsst.ip.isr.PhotodiodeCalib</ref>`</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>calibration<sp/>defined<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>file.</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os.path</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rawData<sp/>=<sp/>np.loadtxt(filename,<sp/>dtype=[(</highlight><highlight class="stringliteral">&apos;time&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;float&apos;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="stringliteral">&apos;current&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;float&apos;</highlight><highlight class="normal">)])</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basename<sp/>=<sp/>os.path.basename(filename)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cleaned<sp/>=<sp/>os.path.splitext(basename)[0]</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_,<sp/>_,<sp/>day_obs,<sp/>seq_num<sp/>=<sp/>cleaned.split(</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cls(timeSamples=rawData[</highlight><highlight class="stringliteral">&apos;time&apos;</highlight><highlight class="normal">],<sp/>currentSamples=rawData[</highlight><highlight class="stringliteral">&apos;current&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>day_obs=int(day_obs),<sp/>seq_num=int(seq_num))</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a68cb3192ed74542c0ea137c8ca1dcfaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a68cb3192ed74542c0ea137c8ca1dcfaf" kindref="member">integrate</ref>(self):</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Integrate<sp/>the<sp/>current.</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raises</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>------</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RuntimeError</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Raised<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>integration<sp/>method<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>known.</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a88c226f345c18d6e74872cc228b37793" kindref="member">integrationMethod</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;DIRECT_SUM&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1af20ae748dfb2e8ddb0b726870af4745f" kindref="member">integrateDirectSum</ref>()</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a88c226f345c18d6e74872cc228b37793" kindref="member">integrationMethod</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;TRIMMED_SUM&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a5be489fb25ceeed2e0e9650ff6b66aa7" kindref="member">integrateTrimmedSum</ref>()</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a88c226f345c18d6e74872cc228b37793" kindref="member">integrationMethod</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;CHARGE_SUM&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a7705cdd10e90a09b77f0b02050f6a72d" kindref="member">integrateChargeSum</ref>()</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(f</highlight><highlight class="stringliteral">&quot;Unknown<sp/>integration<sp/>method<sp/>{self.integrationMethod}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1af20ae748dfb2e8ddb0b726870af4745f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1af20ae748dfb2e8ddb0b726870af4745f" kindref="member">integrateDirectSum</ref>(self):</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Integrate<sp/>points.</highlight></codeline>
<codeline lineno="250"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="251"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>uses<sp/>numpy&apos;s<sp/>trapezoidal<sp/>integrator.</highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>:<sp/>`float`</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Total<sp/>charge<sp/>measured.</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.trapz(self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1afb29cb1b1f4b6da8a9f90d4cfa67babc" kindref="member">currentSamples</ref>,<sp/>x=self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ae48d220b2e70470d27731ccaa50b5ba5" kindref="member">timeSamples</ref>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a5be489fb25ceeed2e0e9650ff6b66aa7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a5be489fb25ceeed2e0e9650ff6b66aa7" kindref="member">integrateTrimmedSum</ref>(self):</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Integrate<sp/>points<sp/>with<sp/>a<sp/>baseline<sp/>level<sp/>subtracted.</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>uses<sp/>numpy&apos;s<sp/>trapezoidal<sp/>integrator.</highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>:<sp/>`float`</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Total<sp/>charge<sp/>measured.</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>Also</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsst.eotask.gen3.eoPtc</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentThreshold<sp/>=<sp/>((max(self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1afb29cb1b1f4b6da8a9f90d4cfa67babc" kindref="member">currentSamples</ref>)<sp/>-<sp/>min(self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1afb29cb1b1f4b6da8a9f90d4cfa67babc" kindref="member">currentSamples</ref>))/5.0</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>min(self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1afb29cb1b1f4b6da8a9f90d4cfa67babc" kindref="member">currentSamples</ref>))</highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowValueIndices<sp/>=<sp/>np.where(self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1afb29cb1b1f4b6da8a9f90d4cfa67babc" kindref="member">currentSamples</ref><sp/>&lt;<sp/>currentThreshold)</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseline<sp/>=<sp/>np.median(self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1afb29cb1b1f4b6da8a9f90d4cfa67babc" kindref="member">currentSamples</ref>[lowValueIndices])</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.trapz(self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1afb29cb1b1f4b6da8a9f90d4cfa67babc" kindref="member">currentSamples</ref><sp/>-<sp/>baseline,<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ae48d220b2e70470d27731ccaa50b5ba5" kindref="member">timeSamples</ref>)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a7705cdd10e90a09b77f0b02050f6a72d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a7705cdd10e90a09b77f0b02050f6a72d" kindref="member">integrateChargeSum</ref>(self):</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;For<sp/>this<sp/>method,<sp/>the<sp/>values<sp/>in<sp/>.currentSamples<sp/>are<sp/>actually<sp/>the</highlight></codeline>
<codeline lineno="282"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integrated<sp/>charge<sp/>values<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>measured<sp/>by<sp/>the<sp/>ammeter<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>each</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampling<sp/>interval.<sp/><sp/>We<sp/>need<sp/>to<sp/>do<sp/>a<sp/>baseline<sp/>subtraction,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>based<sp/>on<sp/>the<sp/>charge<sp/>values<sp/>when<sp/>the<sp/>LED<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>off,<sp/>then<sp/>sum<sp/>up</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>corrected<sp/>signals.</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>:<sp/>`float`</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Total<sp/>charge<sp/>measured.</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ae48d220b2e70470d27731ccaa50b5ba5" kindref="member">timeSamples</ref>[1:]<sp/>-<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1ae48d220b2e70470d27731ccaa50b5ba5" kindref="member">timeSamples</ref>[:-1]</highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>.currentSamples<sp/>values<sp/>are<sp/>the<sp/>current<sp/>integrals<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>interval<sp/>preceding<sp/>the<sp/>current<sp/>time<sp/>stamp,<sp/>so<sp/>omit<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>first<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charge<sp/>=<sp/>self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1a6dd06fa6af4e6e0316881369c750db19" kindref="member">currentScale</ref>*self.<ref refid="classlsst_1_1ip_1_1isr_1_1photodiode_1_1_photodiode_calib_1afb29cb1b1f4b6da8a9f90d4cfa67babc" kindref="member">currentSamples</ref>[1:]</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>current<sp/>per<sp/>interval<sp/>to<sp/>use<sp/>for<sp/>baseline<sp/>subtraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>without<sp/>assuming<sp/>all<sp/>of<sp/>the<sp/>dt<sp/>values<sp/>are<sp/>the<sp/>same:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>charge/dt</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>To<sp/>determine<sp/>the<sp/>baseline<sp/>current<sp/>level,<sp/>exclude<sp/>points<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>signal<sp/>levels<sp/>&gt;<sp/>5%<sp/>of<sp/>the<sp/>maximum<sp/>(measured<sp/>relative<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>overall<sp/>minimum),<sp/>and<sp/>extend<sp/>that<sp/>selection<sp/>2<sp/>entries<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>either<sp/>side<sp/>to<sp/>avoid<sp/>otherwise<sp/>low-valued<sp/>points<sp/>that<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>signal<sp/>ramp<sp/>and<sp/>which<sp/>should<sp/>not<sp/>be<sp/>included<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>baseline<sp/>estimate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>np.max(current)<sp/>-<sp/>np.min(current)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal,<sp/>=<sp/>np.where(current<sp/>&gt;<sp/>dy/20.<sp/>+<sp/>np.min(current))</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imin<sp/>=<sp/>signal[0]<sp/>-<sp/>2</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imax<sp/>=<sp/>signal[-1]<sp/>+<sp/>2</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bg<sp/>=<sp/>np.concatenate([np.arange(0,<sp/>imin),<sp/>np.arange(imax,<sp/>len(current))])</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bg_current<sp/>=<sp/>np.sum(charge[bg])/np.sum(dt[bg])</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Return<sp/>the<sp/>background-subtracted<sp/>total<sp/>charge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.sum(charge<sp/>-<sp/>bg_current*dt)</highlight></codeline>
    </programlisting>
    <location file="python/lsst/ip/isr/photodiode.py"/>
  </compounddef>
</doxygen>
